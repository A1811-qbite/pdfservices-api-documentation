{"version":3,"file":"214dae75-d890f4499bf9b6c14462.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/@adobe/gatsby-theme-aio/components/GlobalHeader/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport { withPrefix } from 'gatsby';\nimport { GatsbyLink } from '@adobe/gatsby-theme-aio/src/components/GatsbyLink';\nimport {\n  findSelectedTopPage,\n  findSelectedTopPageMenu,\n  rootFix,\n  rootFixPages,\n  getExternalLinkProps,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME\n} from '@adobe/gatsby-theme-aio/src/utils';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '@adobe/gatsby-theme-aio/src/components/AnchorButton';\nimport { Button } from '@adobe/gatsby-theme-aio/src/components/Button';\nimport { ProgressCircle } from '@adobe/gatsby-theme-aio/src/components/ProgressCircle';\nimport { Adobe, ChevronDown, Magnify, Close, TripleGripper } from '@adobe/gatsby-theme-aio/src/components/Icons';\nimport { ActionButton, Text as ActionButtonLabel } from '@adobe/gatsby-theme-aio/src/components/ActionButton';\nimport { PickerButton } from '@adobe/gatsby-theme-aio/src/components/Picker';\nimport { Menu, Item as MenuItem } from '@adobe/gatsby-theme-aio/src/components/Menu';\nimport { Popover } from '@adobe/gatsby-theme-aio/src/components/Popover';\nimport { Image } from '@adobe/gatsby-theme-aio/src/components/Image';\nimport { Link } from '@adobe/gatsby-theme-aio/src/components/Link';\nimport {\n  Tabs,\n  Item as TabsItem,\n  Label as TabsItemLabel,\n  TabsIndicator,\n  positionIndicator,\n  animateIndicator\n} from '@adobe/gatsby-theme-aio/src/components/Tabs';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/assetlist';\nimport { Divider } from '@adobe/gatsby-theme-aio/src/components/Divider';\nimport DEFAULT_AVATAR from './avatar.svg';\nimport {  DESKTOP_SCREEN_WIDTH } from \"@adobe/gatsby-theme-aio/src/utils\";\n\nconst getSelectedTabIndex = (location, pages) => {\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n\n  let selectedIndex = pagesWithRootFix.indexOf(findSelectedTopPage(pathWithRootFix, pagesWithRootFix));\n\n  // Assume first item is selected\n  if (selectedIndex === -1) {\n    selectedIndex = 0;\n  }\n\n  return selectedIndex;\n};\n\nconst getAvatar = async (userId) => {\n  try {\n    const req = await fetch(`https://cc-api-behance.adobe.io/v2/users/${userId}?api_key=SUSI2`);\n    const res = await req.json();\n    return res?.user?.images?.['138'] ?? DEFAULT_AVATAR;\n  } catch (e) {\n    console.warn(e);\n    return DEFAULT_AVATAR;\n  }\n};\n\nconst GlobalHeader = ({\n  hasIMS,\n  ims,\n  isLoadingIms,\n  home,\n  versions,\n  pages,\n  docs,\n  location,\n  toggleSideNav,\n  hasSideNav,\n  hasSearch,\n  showSearch,\n  setShowSearch,\n  searchButtonId\n}) => {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(getSelectedTabIndex(location, pages));\n  const tabsRef = useRef(null);\n  const tabsContainerRef = useRef(null);\n  const selectedTabIndicatorRef = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n  const versionPopoverRef = useRef(null);\n  const profilePopoverRef = useRef(null);\n  const [openVersion, setOpenVersion] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openMenuIndex, setOpenMenuIndex] = useState(-1);\n  const [profile, setProfile] = useState(null);\n  const [avatar, setAvatar] = useState(DEFAULT_AVATAR);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n\n  const POPOVER_ANIMATION_DELAY = 200;\n  const versionPopoverId = nextId();\n  const profilePopoverId = nextId();\n  const hasHome = home?.hidden !== true;\n\n  const positionSelectedTabIndicator = (index) => {\n    const selectedTab = pages[index].tabRef;\n\n    if (selectedTab?.current) {\n      positionIndicator(selectedTabIndicatorRef, selectedTab);\n    }\n  };\n\n  useEffect(() => {\n    const index = getSelectedTabIndex(location, pages);\n    setSelectedTabIndex(index);\n\n    animateIndicator(selectedTabIndicatorRef, isAnimated);\n    positionSelectedTabIndicator(index);\n  }, [location,location.pathname,isAnimated,pages]);\n\n  useEffect(() => {\n    (async () => {\n      if (ims && ims.isSignedInUser()) {\n        const profile = await ims.getProfile();\n        setProfile(profile);\n        setAvatar(await getAvatar(profile.userId));\n        setIsLoadingProfile(false);\n      } else if (!isLoadingIms) {\n        setIsLoadingProfile(false);\n      }\n    })();\n  }, [ims,isLoadingIms]);\n\n  useEffect(() => {\n    if (versionPopoverRef.current) {\n      if (openVersion) {\n        const { top, left } = versionPopoverRef.current.getBoundingClientRect();\n\n        versionPopoverRef.current.style.left = `calc(${left}px + var(--spectrum-global-dimension-size-160))`;\n        versionPopoverRef.current.style.top = `${top}px`;\n        versionPopoverRef.current.style.position = 'fixed';\n      } else {\n        // Wait for animation to finish\n        setTimeout(() => {\n          versionPopoverRef.current.style = '';\n        }, POPOVER_ANIMATION_DELAY);\n      }\n    }\n  }, [openVersion]);\n\n  useEffect(() => {\n    if (openMenuIndex !== -1) {\n      const menuRef = pages[openMenuIndex].menuRef;\n\n      const { top, left } = menuRef.current.getBoundingClientRect();\n\n      menuRef.current.style.left = `${left}px`;\n      menuRef.current.style.top = `${top}px`;\n      menuRef.current.style.position = 'fixed';\n    } else {\n      pages.forEach((page) => {\n        const menuRef = page.menuRef;\n        if (menuRef) {\n          // Wait for animation to finish\n          setTimeout(() => {\n            menuRef.current.style = '';\n          }, POPOVER_ANIMATION_DELAY);\n        }\n      });\n    }\n  }, [openMenuIndex,pages]);\n\n  useEffect(() => {\n    // Clicking outside of menu should close menu\n    const onClick = (event) => {\n      if (versionPopoverRef.current && !versionPopoverRef.current.contains(event.target)) {\n        setOpenVersion(false);\n      }\n\n      if (profilePopoverRef?.current && !profilePopoverRef.current.contains(event.target)) {\n        setOpenProfile(false);\n      }\n\n      pages.some((page) => {\n        if (page?.menuRef?.current && !page.menuRef.current.contains(event.target)) {\n          setOpenMenuIndex(-1);\n        }\n      });\n    };\n\n    document.addEventListener('click', onClick);\n\n    return () => document.removeEventListener('click', onClick);\n  }, [pages]);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setOpenVersion(false);\n      setOpenMenuIndex(-1);\n    };\n\n    tabsContainerRef.current.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => tabsContainerRef.current.removeEventListener('scroll', onScroll);\n  }, []);\n  \n  return (\n    <header\n      role=\"banner\"\n      css={css`\n        height: 100%;\n        border-bottom: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n        box-sizing: border-box;\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          border-bottom: none;\n        }\n      `}>\n      <nav\n        css={css`\n          height: 100%;\n        `}\n        role=\"navigation\"\n        aria-label=\"Global\">\n        <div\n          css={css`\n            display: grid;\n            grid-template-areas: 'title navigation optional';\n            grid-template-columns: minmax(auto, min-content) auto minmax(auto, min-content);\n            align-items: center;\n            margin-right: var(--spectrum-global-dimension-size-200);\n            height: 100%;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              grid-template-columns: minmax(auto, min-content) auto 0 0;\n              margin-right: 0;\n              margin-left: 0;\n              height: calc(100% + var(--spectrum-global-dimension-size-10));\n              overflow: hidden;\n            }\n          `}>\n          <div\n            css={css`\n              height: 100%;\n              grid-area: title;\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                padding-left: ${!hasSideNav ? 'var(--spectrum-global-dimension-size-200)' : '0'};\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                height: 100%;\n                align-items: center;\n              `}>\n              <div\n                css={css`\n                  display: flex;\n                  height: 100%;\n                  align-items: center;\n                `}>\n                <div\n                  css={css`\n                    display: none;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: ${hasSideNav ? 'block' : 'none'};\n                      margin: 0 var(--spectrum-global-dimension-size-100);\n                    }\n                  `}>\n                  <ActionButton\n                    isQuiet\n                    onClick={() => {\n                      toggleSideNav && toggleSideNav();\n                    }}>\n                    <TripleGripper />\n                  </ActionButton>\n                </div>\n                <a\n                  href=\"/\"\n                  css={css`\n                    display: flex;\n                    height: 100%;\n                    text-decoration: none;\n                    padding-left: var(--spectrum-global-dimension-size-400);\n                    padding-right: var(--spectrum-global-dimension-size-300);\n                    padding-bottom: var(--spectrum-global-dimension-size-25);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      padding-left: 0;\n                      padding-right: 0;\n                    }\n                  `}>\n                  <div\n                    css={css`\n                      display: flex;\n                      align-items: center;\n                    `}>\n                    <Adobe\n                      css={css`\n                        width: calc(\n                          var(--spectrum-global-dimension-size-250) + var(--spectrum-global-dimension-size-25)\n                        );\n                        height: var(--spectrum-global-dimension-size-225);\n                        display: block;\n                        margin-right: var(--spectrum-global-dimension-size-100);\n                      `}\n                    />\n                    <strong\n                      className=\"spectrum-Heading spectrum-Heading--sizeXXS\"\n                      css={css`\n                        color: #fa0f00;\n                        font-size: calc(\n                          var(--spectrum-global-dimension-size-200) - var(--spectrum-global-dimension-size-10)\n                        );\n                        font-weight: 700;\n                        white-space: nowrap;\n                      `}>\n                      <span\n                        css={css`\n                          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                            display: none;\n                          }\n                        `}>\n                        Adobe&nbsp;\n                      </span>\n                      Developer\n                    </strong>\n                  </div>\n                </a>\n              </div>\n\n              {hasHome && (\n                <div\n                  css={css`\n                    height: calc(100% + var(--spectrum-global-dimension-size-10));\n                    border-left: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n                    border-right: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: none;\n                    }\n                  `}>\n                  <Link isQuiet variant=\"secondary\">\n                    <a\n                      css={css`\n                        display: flex;\n                        height: calc(100% - var(--spectrum-global-dimension-size-10));\n                        align-items: center;\n                        justify-content: center;\n                        box-sizing: border-box;\n                        padding: 0 var(--spectrum-global-dimension-size-300);\n                        white-space: nowrap;\n                        color: var(--spectrum-global-color-gray-700);\n                        transition: background-color var(--spectrum-global-animation-duration-100) ease-out,\n                          color var(--spectrum-global-animation-duration-100) ease-out;\n\n                        &:hover {\n                          background-color: var(--spectrum-global-color-gray-75);\n                          color: var(--spectrum-global-color-gray-900);\n                          text-decoration: none;\n                        }\n                      `}\n                      href={home?.href || DEFAULT_HOME.href}\n                      {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}>\n                      {home?.title || DEFAULT_HOME.title}\n                    </a>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            ref={tabsContainerRef}\n            css={css`\n              grid-area: navigation;\n              ${hasHome && 'margin-left: var(--spectrum-global-dimension-size-200);'}\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                ${!hasHome && 'margin-left: var(--spectrum-global-dimension-size-300);'}\n\n                overflow-x: auto;\n                overflow-x: overlay;\n                overflow-y: hidden;\n                -ms-overflow-style: none;\n                scrollbar-width: none;\n\n                &::-webkit-scrollbar {\n                  display: none;\n                }\n\n                margin-right: var(--spectrum-global-dimension-size-3000);\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                position: fixed;\n                top: calc(var(--spectrum-global-dimension-size-600) - var(--spectrum-global-dimension-size-10));\n                height: var(--spectrum-global-dimension-size-600);\n                left: 0;\n                right: 0;\n                margin-left: 0;\n                margin-right: 0;\n                background-color: var(--spectrum-global-color-gray-50);\n                border-bottom: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n              }\n            `}>\n            <div\n              css={css`\n                display: none;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  display: block;\n                  pointer-events: none;\n                  position: fixed;\n                  top: var(--spectrum-global-dimension-size-600);\n                  height: calc(var(--spectrum-global-dimension-size-600) - var(--spectrum-global-dimension-size-25));\n                  right: 0;\n                  width: var(--spectrum-global-dimension-size-300);\n                  background: -webkit-linear-gradient(0deg, rgba(255, 255, 255, 0), white);\n                  z-index: 1;\n                }\n              `}\n            />\n\n            <Tabs\n              css={css`\n                @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                  padding-bottom: var(--spectrum-global-dimension-size-400);\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                }\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding-bottom: 0;\n                  margin-top: 0;\n                }\n              `}\n              ref={tabsRef}\n              onFontsReady={() => {\n                positionSelectedTabIndicator(selectedTabIndex);\n                setIsAnimated(true);\n              }}>\n              {hasHome && (\n                <div\n                  css={css`\n                    display: none;\n                    margin-right: var(--spectrum-global-dimension-size-300);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                  `}>\n                  <TabsItem\n                    elementType={GatsbyLink}\n                    to={home?.href || DEFAULT_HOME.href}\n                    {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}>\n                    <TabsItemLabel>{home?.title || DEFAULT_HOME.title}</TabsItemLabel>\n                  </TabsItem>\n                </div>\n              )}\n              {pages.map((page, i) => {\n                const isSelectedTab = selectedTabIndex === i;\n                const menuPopoverId = nextId();\n\n                const setTabRef = (element) => {\n                  page.tabRef = { current: element };\n                };\n\n                const setTabMenuRef = (element) => {\n                  page.menuRef = { current: element };\n                };\n\n                return (\n                  <Fragment key={i}>\n                    {page.href ? (\n                      <TabsItem\n                        elementType={GatsbyLink}\n                        {...getExternalLinkProps(page.href)}\n                        ref={setTabRef}\n                        to={withPrefix(page.href)}\n                        selected={isSelectedTab}>\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                      </TabsItem>\n                    ) : (\n                      <TabsItem\n                        css={css`\n                          ${openMenuIndex === i &&\n                          `\n                          &:after {\n                            content: '';\n                            position: absolute;\n                            z-index: -1;\n                            height: var(--spectrum-global-dimension-size-800);\n                            width: calc(100% + var(--spectrum-global-dimension-size-250));\n                            left: calc(-1 * var(--spectrum-global-dimension-size-125));\n                            top: calc(-1 * var(--spectrum-global-dimension-size-100));\n                            background-color: var(--spectrum-global-color-gray-100);\n                          }\n\n                        `}\n                        `}\n                        ref={setTabRef}\n                        selected={isSelectedTab}\n                        aria-controls={menuPopoverId}\n                        aria-label={page.title}\n                        onClick={(event) => {\n                          event.stopImmediatePropagation();\n\n                          setOpenVersion(false);\n                          setOpenProfile(false);\n                          setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                        }}\n                        onMouseOver={(event) => {\n                          event.stopImmediatePropagation();\n                          setOpenVersion(false);\n                          setOpenProfile(false);\n                          setOpenMenuIndex(i)\n                          // setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                        }}\n                        onMouseLeave={\n                          (event) => {\n                            event.stopImmediatePropagation();\n                            setOpenVersion(false);\n                            setOpenProfile(false);\n                            setOpenMenuIndex(-1)\n                          }\n                        }\n\n                        >\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                        <ChevronDown\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-125) !important;\n                            height: var(--spectrum-global-dimension-size-125) !important;\n                            margin-left: var(--spectrum-global-dimension-size-100);\n                            transition: transform var(--spectrum-global-animation-duration-100) ease-in-out;\n                            ${openMenuIndex === i && `transform: rotate(-90deg);`}\n                          `}\n                        />\n                        <div\n                          onClick={(event) => {\n                            event.stopImmediatePropagation();\n\n                            setOpenVersion(false);\n                            setOpenProfile(false);\n                            setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                          }}\n                          onMouseEnter={(event) => {\n                            event.stopImmediatePropagation();\n                            setOpenVersion(false);\n                            setOpenProfile(false);\n                            setOpenMenuIndex(i)\n                          }}\n                          onMouseLeave={\n                            (event) => {\n                              event.stopImmediatePropagation();\n                              setOpenVersion(false);\n                              setOpenProfile(false);\n                              setOpenMenuIndex(-1)\n                            }\n                          }\n                          role=\"button\"\n                          tabIndex={0}\n                          aria-label={page.title}\n                          onFocus={() => {\n                            setOpenMenuIndex(i);\n                          }}\n                          \n                        >\n                        <Popover\n                          ref={setTabMenuRef}\n                          id={menuPopoverId}\n\n                          css={css`\n                            margin-left: calc(-1 * var(--spectrum-global-dimension-size-65));\n                            margin-top: var(--spectrum-global-dimension-size-25);\n                            border-top-left-radius: 0;\n                            border-top-right-radius: 0;\n                            ${page.menu.some((menu) => menu.description) &&\n                            `width: var(--spectrum-global-dimension-size-2400);`}\n\n                            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                              margin-top: calc(-1 * var(--spectrum-global-dimension-size-40));\n                            }\n                          `}\n                          isOpen={openMenuIndex === i}>\n                          <Menu>\n                            {page.menu.map((menu, k) => {\n                              const pathWithRootFix = rootFix(location.pathname);\n                              const selectedMenu = findSelectedTopPageMenu(pathWithRootFix, page);\n                              const menuHref = withPrefix(menu.href);\n                              \n                              return (\n                                <MenuItem\n                                  key={k}\n                                  href={menuHref}\n                                  {...getExternalLinkProps(menuHref)}\n                                  isHighlighted={menu === selectedMenu}\n                                  onKeyDown={(e) => {\n   \n                                    if (e.key === 'ArrowDown') {\n                                      e.currentTarget.nextSibling && e.currentTarget.nextSibling.focus();\n                                    }\n                                    if (e.key === 'ArrowUp') {\n                                      e.currentTarget.previousSibling && e.currentTarget.previousSibling.focus();\n                                    }\n                                    if( e.key === 'Enter'){\n                                      e.currentTarget.focus();\n                                    }\n                                    if(!e.currentTarget.nextSibling){\n                                       setOpenMenuIndex(-1);\n                                    }\n                                  }}\n                                \n                                  >\n                                  {menu.description ? (\n                                    <div\n                                      css={css`\n                                        margin: var(--spectrum-global-dimension-size-100) 0;\n                                      `}>\n                                      <div\n                                        css={css`\n                                          color: var(--spectrum-global-color-gray-900);\n                                        `}>\n                                        {menu.title}\n                                      </div>\n                                      <div\n                                        className=\"spectrum-Body spectrum-Body--sizeXS\"\n                                        css={css`\n                                          white-space: normal;\n                                          margin-top: var(--spectrum-global-dimension-size-50);\n                                        `}>\n                                        {menu.description}\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    <span>{menu.title}</span>\n                                  )}\n                                </MenuItem>\n                              );\n                            })}\n                          </Menu>\n                        </Popover>\n                        </div>\n                      </TabsItem>\n                    )}\n                    {i === 0 && versions?.length > 0 && (\n                      <div\n                        css={css`\n                          margin-left: var(--spectrum-global-dimension-size-100) !important;\n                          margin-right: var(--spectrum-global-dimension-size-300);\n                        `}>\n                        <PickerButton\n                          isQuiet\n                          isOpen={openVersion}\n                          aria-controls={versionPopoverId}\n                          onClick={(event) => {\n                            event.stopImmediatePropagation();\n\n                            setOpenMenuIndex(-1);\n                            setOpenProfile(false);\n                            setOpenVersion((open) => !open);\n                          }}>\n                          {versions.find(({ selected }) => selected)?.title}\n                        </PickerButton>\n                        <Popover\n                          ref={versionPopoverRef}\n                          id={versionPopoverId}\n                          variant=\"picker\"\n                          isQuiet\n                          isOpen={openVersion}>\n                          <Menu>\n                            {versions.map((version, k) => (\n                              <MenuItem\n                                key={k}\n                                isSelected={version.selected}\n                                isHighlighted={version.selected}\n                                onClick={() => {\n                                  setOpenVersion(false);\n                                }}\n                                href={version.href}\n                                {...getExternalLinkProps(version.href)}>\n                                {version.title}\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </div>\n                    )}\n                  </Fragment>\n                );\n              })}\n              <TabsIndicator\n                ref={selectedTabIndicatorRef}\n                css={css`\n                  bottom: calc(-1 * var(--spectrum-global-dimension-size-125)) !important;\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    bottom: calc(\n                      var(--spectrum-global-dimension-size-400) - var(--spectrum-global-dimension-size-125)\n                    ) !important;\n                  }\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    bottom: calc(-1 * var(--spectrum-tabs-rule-size)) !important;\n                  }\n                `}\n              />\n              {docs && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-300);\n                    white-space: nowrap;\n                  `}>\n                  <AnchorButton variant=\"primary\" href={withPrefix(docs.href)}>\n                    {docs.title ?? 'View Docs'}\n                  </AnchorButton>\n                </div>\n              )}\n              <div\n                css={css`\n                  display: none;\n                  margin-left: var(--spectrum-global-dimension-size-300);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: block;\n                  }\n                `}>\n                <AnchorButton variant=\"primary\" href=\"/console\">\n                  Console\n                </AnchorButton>\n              </div>\n            </Tabs>\n          </div>\n          <div\n            css={css`\n              grid-area: optional;\n              justify-self: flex-end;\n            `}>\n            <div\n              css={css`\n                display: flex;\n              `}>\n              {hasSearch && (\n                <ActionButton\n                  id={searchButtonId}\n                  onClick={() => {\n                    setShowSearch((show) => !show);\n                  }}\n                  isQuiet\n                  css={css`\n                    margin-right: var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-right: 0;\n                    }\n                  `}>\n                  {showSearch ? <Close /> : <Magnify />}\n                </ActionButton>\n              )}\n\n              <AnchorButton\n                variant=\"primary\"\n                href=\"/console\"\n                css={css`\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: none;\n                  }\n                `}>\n                Console\n              </AnchorButton>\n\n              {hasIMS && (\n                <div\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-left: var(--spectrum-global-dimension-size-200);\n                    width: var(--spectrum-global-dimension-size-800);\n                  `}>\n                  <ProgressCircle size=\"S\" hidden={!isLoadingIms} />\n\n                  <ActionButton\n                    css={css`\n                      margin-top: calc(-1 * var(--spectrum-global-dimension-size-25));\n                    `}\n                    hidden={isLoadingIms || isLoadingProfile || profile}\n                    variant=\"primary\"\n                    isQuiet\n                    onClick={() => {\n                      ims.signIn();\n                    }}>\n                    <ActionButtonLabel>Sign in</ActionButtonLabel>\n                  </ActionButton>\n\n                  <div hidden={!profile}>\n                    <button\n                      aria-label=\"Profile\"\n                      aria-controls={profilePopoverId}\n                      onClick={(event) => {\n                        event.stopImmediatePropagation();\n\n                        setOpenVersion(false);\n                        setOpenMenuIndex(-1);\n                        setOpenProfile((open) => !open);\n                      }}\n                      css={css`\n                        display: block;\n                        padding: 0;\n                        border: none;\n                        width: var(--spectrum-global-dimension-size-400);\n                        height: var(--spectrum-global-dimension-size-400);\n                        border-radius: var(--spectrum-global-dimension-static-percent-50);\n                        background: var(--spectrum-global-color-gray-50);\n                        overflow: hidden;\n                        cursor: pointer;\n                      `}>\n                      <Image alt=\"Avatar\" src={avatar} />\n                    </button>\n                    <Popover\n                      id={profilePopoverId}\n                      ref={profilePopoverRef}\n                      isOpen={openProfile}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-3400);\n                        max-height: var(--spectrum-global-dimension-size-4600);\n                        margin-left: calc(-1 * var(--spectrum-global-dimension-size-3000));\n                      `}>\n                      <div\n                        css={css`\n                          display: flex;\n                          align-items: center;\n                          justify-content: center;\n                          flex-direction: column;\n                        `}>\n                        <div\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-800);\n                            height: var(--spectrum-global-dimension-size-800);\n                            border-radius: var(--spectrum-global-dimension-static-percent-50);\n                            background: var(--spectrum-global-color-gray-50);\n                            overflow: hidden;\n                            margin-top: var(--spectrum-global-dimension-size-400);\n                            margin-bottom: var(--spectrum-global-dimension-size-200);\n                          `}>\n                          <Image alt=\"Avatar\" src={avatar} />\n                        </div>\n\n                        <div\n                          className=\"spectrum-Heading spectrum-Heading--sizeL spectrum-Heading--light\"\n                          css={css`\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            text-align: center;\n                          `}>\n                          {profile && profile.displayName}\n                        </div>\n\n                        <div\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            box-sizing: border-box;\n                            width: 100%;\n                          `}>\n                          <Divider size=\"S\" />\n                        </div>\n\n                        <AnchorButton href=\"https://account.adobe.com/\" variant=\"primary\" isQuiet>\n                          Edit Profile\n                        </AnchorButton>\n\n                        <Button\n                          variant=\"primary\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                          `}\n                          onClick={() => {\n                            ims.signOut();\n                          }}>\n                          Sign out\n                        </Button>\n                      </div>\n                    </Popover>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nGlobalHeader.propTypes = {\n  ims: PropTypes.object,\n  isLoadingIms: PropTypes.bool,\n  home: PropTypes.object,\n  versions: PropTypes.array,\n  pages: PropTypes.array,\n  docs: PropTypes.object,\n  location: PropTypes.object,\n  toggleSideNav: PropTypes.func,\n  hasSideNav: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  hasSearch: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  searchButtonId: PropTypes.string\n};\n\nexport { GlobalHeader };\n"],"names":["getSelectedTabIndex","location","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedIndex","indexOf","findSelectedTopPage","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","GlobalHeader","_ref24","_docs$title","hasIMS","ims","isLoadingIms","home","versions","docs","toggleSideNav","hasSideNav","hasSearch","showSearch","setShowSearch","searchButtonId","selectedTabIndex","setSelectedTabIndex","useState","tabsRef","useRef","tabsContainerRef","selectedTabIndicatorRef","isAnimated","setIsAnimated","versionPopoverRef","profilePopoverRef","openVersion","setOpenVersion","openProfile","setOpenProfile","openMenuIndex","setOpenMenuIndex","profile","setProfile","avatar","setAvatar","DEFAULT_AVATAR","isLoadingProfile","setIsLoadingProfile","versionPopoverId","nextId","profilePopoverId","hasHome","hidden","positionSelectedTabIndicator","index","selectedTab","tabRef","current","positionIndicator","useEffect","animateIndicator","isSignedInUser","getProfile","async","_res$user$images$","_res$user","_res$user$images","req","fetch","userId","res","json","user","images","e","console","warn","getAvatar","top","left","getBoundingClientRect","style","position","setTimeout","menuRef","forEach","page","onClick","event","contains","target","some","_page$menuRef","document","addEventListener","removeEventListener","onScroll","passive","___EmotionJSX","role","css","MOBILE_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","ActionButton","isQuiet","TripleGripper","href","Adobe","className","Link","variant","_extends","DEFAULT_HOME","getExternalLinkProps","title","ref","Tabs","onFontsReady","TabsItem","elementType","GatsbyLink","to","TabsItemLabel","map","i","_versions$find","isSelectedTab","menuPopoverId","setTabRef","element","Fragment","key","withPrefix","selected","stopImmediatePropagation","onMouseOver","onMouseLeave","ChevronDown","onMouseEnter","tabIndex","onFocus","Popover","id","menu","description","isOpen","Menu","k","selectedMenu","findSelectedTopPageMenu","menuHref","MenuItem","isHighlighted","onKeyDown","currentTarget","nextSibling","focus","previousSibling","length","PickerButton","open","find","_ref25","version","isSelected","TabsIndicator","AnchorButton","show","Close","Magnify","ProgressCircle","size","signIn","ActionButtonLabel","Image","alt","src","displayName","Divider","Button","signOut"],"sourceRoot":""}