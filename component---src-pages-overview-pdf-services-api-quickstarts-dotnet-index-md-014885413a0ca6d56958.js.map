{"version":3,"file":"component---src-pages-overview-pdf-services-api-quickstarts-dotnet-index-md-014885413a0ca6d56958.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/overview/pdf-services-api/quickstarts/dotnet/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started-with-adobe-pdf-services-api-net\"\n    }}>{`Getting Started with Adobe PDF Services API (.NET)`}</h1>\n    <p>{`To get started using Adobe PDF Services API, let's walk through a simple scenario - taking an input PDF document and exporting it to Microsoft Word. In this guide, we will walk you through the complete process for creating a program that will accomplish this task. `}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`To complete this guide, you will need:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://dotnet.microsoft.com/en-us/download\"\n        }}>{`.NET Core: version 2.1 or above`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://dotnet.microsoft.com/en-us/download/dotnet/6.0\"\n        }}>{`.Net SDK`}</a></li>\n      <li parentName=\"ul\">{`A build tool: Either Visual Studio or .NET Core CLI.`}</li>\n      <li parentName=\"ul\">{`An Adobe ID. If you do not have one, the credential setup will walk you through creating one.`}</li>\n      <li parentName=\"ul\">{`A way to edit code. No specific editor is required for this guide.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-one-getting-credentials\"\n    }}>{`Step One: Getting credentials`}</h2>\n    <p>{`1) To begin, open your browser to `}<a parentName=\"p\" {...{\n        \"href\": \"https://documentcloud.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-extract-api\"\n      }}>{`https://documentcloud.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-extract-api`}</a>{`. If you are not already logged in to Adobe.com, you will need to sign in or create a new user. Using a personal email account is recommend and not a federated ID.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"750px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"74.6875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/5530d/shot1.webp 320w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/0c8fb/shot1.webp 640w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/3ea8a/shot1.webp 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/dd4a7/shot1.png 320w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/0f09e/shot1.png 640w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/e9985/shot1.png 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/e9985/shot1.png\",\n            \"alt\": \"Sign in\",\n            \"title\": \"Sign in\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`2) After registering or logging in, you will then be asked to name your new credentials. Use the name, \"New Project\". `}</p>\n    <p>{`3) Change the \"Choose language\" setting to \".Net\". `}</p>\n    <p>{`4) Also note the checkbox by, \"Create personalized code sample.\" This will include a large set of samples along with your credentials. These can be helpful for learning more later. `}</p>\n    <p>{`5) Click the checkbox saying you agree to the developer terms and then click \"Create credentials.\"`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"952px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"77.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/5530d/shot2.webp 320w\", \"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/0c8fb/shot2.webp 640w\", \"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/493ca/shot2.webp 952w\"],\n            \"sizes\": \"(max-width: 952px) 100vw, 952px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/dd4a7/shot2.png 320w\", \"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/0f09e/shot2.png 640w\", \"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/be2fd/shot2.png 952w\"],\n            \"sizes\": \"(max-width: 952px) 100vw, 952px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/170d38f41149ec10573ec503c7452504/be2fd/shot2.png\",\n            \"alt\": \"Project setup\",\n            \"title\": \"Project setup\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`6) After your credentials are created, they are automatically  downloaded:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"913px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"51.87500000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/5530d/shot3.webp 320w\", \"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/0c8fb/shot3.webp 640w\", \"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/4d027/shot3.webp 913w\"],\n            \"sizes\": \"(max-width: 913px) 100vw, 913px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/dd4a7/shot3.png 320w\", \"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/0f09e/shot3.png 640w\", \"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/200fa/shot3.png 913w\"],\n            \"sizes\": \"(max-width: 913px) 100vw, 913px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/3fbc51d5608aaf65ac3ec28ec8b0fefa/200fa/shot3.png\",\n            \"alt\": \"alt\",\n            \"title\": \"alt\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"step-two-setting-up-the-project\"\n    }}>{`Step Two: Setting up the project`}</h2>\n    <p>{`1) In your Downloads folder, find the ZIP file with your credentials: PDFServicesSDK-.NetSamples.zip. If you unzip that archive, you will find a README file, your private key, and a folder of samples:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"902px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"47.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/5530d/shot5.webp 320w\", \"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/0c8fb/shot5.webp 640w\", \"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/2096f/shot5.webp 902w\"],\n            \"sizes\": \"(max-width: 902px) 100vw, 902px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/dd4a7/shot5.png 320w\", \"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/0f09e/shot5.png 640w\", \"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/8d021/shot5.png 902w\"],\n            \"sizes\": \"(max-width: 902px) 100vw, 902px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/b428d92f621f886613d638e421dd2391/8d021/shot5.png\",\n            \"alt\": \"alt\",\n            \"title\": \"alt\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`2) We need two things from this download. The `}<inlineCode parentName=\"p\">{`private.key`}</inlineCode>{` file (as shown in the screenshot above, and the `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` file. You can find this in the `}<inlineCode parentName=\"p\">{`adobe-DC.PDFServicesSDK.NET.Samples`}</inlineCode>{` folder, inside any of the sample subdirectories, so for example, the `}<inlineCode parentName=\"p\">{`CombinePDF`}</inlineCode>{` folder.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Note that that private key is `}<em parentName=\"p\">{`also`}</em>{` found in this directory so feel free to copy them both from here.`}</p>\n    <p>{`3) Take these two files and place them in a new directory.`}</p>\n    <p>{`4) In your new directory, create a new file, `}<inlineCode parentName=\"p\">{`ExportPDFToWord.csproj`}</inlineCode>{`. This file will declare our requirements as well as help define the application we're creating.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<Project Sdk=\"Microsoft.NET.Sdk\">\n\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>netcoreapp3.1</TargetFramework>\n    </PropertyGroup>\n\n    <ItemGroup>\n        <PackageReference Include=\"log4net\" Version=\"2.0.12\" />\n        <PackageReference Include=\"Adobe.PDFServicesSDK\" Version=\"2.2.1\" />\n    </ItemGroup>\n\n    <ItemGroup>\n        <None Update=\"pdfservices-api-credentials.json\">\n            <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n        </None>\n        <None Update=\"private.key\">\n            <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n        </None>\n        <None Update=\"extractPDFInput.pdf\">\n            <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n        </None>\n        <None Update=\"log4net.config\">\n            <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n        </None>\n    </ItemGroup>\n\n</Project>\n`}</code></pre>\n    <p>{`Our application will take a PDF, `}<inlineCode parentName=\"p\">{`Bodea Brochure.pdf`}</inlineCode>{` (downloadable from `}{`[here]`}{`(`}<a parentName=\"p\" {...{\n        \"href\": \"https://documentcloud.adobe.com/view-sdk-demo/PDFs/Bodea\"\n      }}>{`https://documentcloud.adobe.com/view-sdk-demo/PDFs/Bodea`}</a>{` Brochure.pdf)) and convert it to a Microsoft Word document, `}<inlineCode parentName=\"p\">{`Bodea Brochure.docx`}</inlineCode>{`.`}</p>\n    <p>{`5) In your editor, open the directory where you previously copied the credentials and created the `}<inlineCode parentName=\"p\">{`csproj`}</inlineCode>{` file. Create a new file, `}<inlineCode parentName=\"p\">{`Program.cs`}</inlineCode>{`. `}</p>\n    <p>{`Now you're ready to begin coding.`}</p>\n    <h2 {...{\n      \"id\": \"step-three-creating-the-application\"\n    }}>{`Step Three: Creating the application`}</h2>\n    <p>{`1) We'll begin by including our required dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.IO;\nusing System;\nusing System.Collections.Generic;\nusing log4net.Repository;\nusing log4net.Config;\nusing log4net;\nusing System.Reflection;\nusing Adobe.PDFServicesSDK;\nusing Adobe.PDFServicesSDK.auth;\nusing Adobe.PDFServicesSDK.pdfops;\nusing Adobe.PDFServicesSDK.options.exportpdf;\nusing Adobe.PDFServicesSDK.io;\nusing Adobe.PDFServicesSDK.exception;\n`}</code></pre>\n    <p>{`2) Now let's define our main class and `}<inlineCode parentName=\"p\">{`Main`}</inlineCode>{` method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`namespace ExportPDFToWord\n{\n    class Program\n    {\n        private static readonly ILog log = LogManager.GetLogger(typeof(Program));\n        static void Main()\n        {\n        }\n    }\n}\n`}</code></pre>\n    <p>{`3) Inside our class, we'll begin by defining our input PDF and output filenames. If the output file already exists, it will be deleted:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`String input = \"./Bodea Brochure.pdf\";\n\nString output = \"./Bodea Brochure.docx\";\nif(File.Exists(Directory.GetCurrentDirectory() + output))\n{\n    File.Delete(Directory.GetCurrentDirectory() + output);\n}\n\nConsole.Write(\"Exporting \"+ input + \" to \" + output + \"\\\\n\");\n`}</code></pre>\n    <p>{`4) Next, we setup the SDK to use our credentials.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Initial setup, create credentials instance.\nCredentials credentials = Credentials.ServiceAccountCredentialsBuilder()\n    .FromFile(Directory.GetCurrentDirectory() + \"/pdfservices-api-credentials.json\")\n    .Build();\n\n// Create an ExecutionContext using credentials and create a new operation instance.\nExecutionContext executionContext = ExecutionContext.Create(credentials);\n`}</code></pre>\n    <p>{`This code both points to the credentials downloaded previously as well as sets up an execution context object that will be used later.`}</p>\n    <p>{`5) Now, let's create the operation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ExportPDFOperation exportPdfOperation = ExportPDFOperation.CreateNew(ExportPDFTargetFormat.DOCX);\n\n// Provide an input FileRef for the operation.\nFileRef sourceFileRef = FileRef.CreateFromLocalFile(input);\nexportPdfOperation.SetInput(sourceFileRef);\n`}</code></pre>\n    <p>{`This set of code defines what we're doing (an Export operation), points to our local file and specifies the input is a PDF, and then defines options for the Export call. In this example, the only option is the export format, DOCX.`}</p>\n    <p>{`6) The next code block executes the operation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Execute the operation.\nFileRef result = exportPdfOperation.Execute(executionContext);\n\n// Save the result to the specified location.\nresult.SaveAs(Directory.GetCurrentDirectory() + output);\n`}</code></pre>\n    <p>{`This code runs the Extraction process and then stores the result Word document to the file system. `}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"548px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"17.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/4f1d7242440ea91e11f9cb617f3556d9/5530d/shot9.webp 320w\", \"/pdfservices-api-documentation/static/4f1d7242440ea91e11f9cb617f3556d9/61816/shot9.webp 548w\"],\n            \"sizes\": \"(max-width: 548px) 100vw, 548px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/4f1d7242440ea91e11f9cb617f3556d9/dd4a7/shot9.png 320w\", \"/pdfservices-api-documentation/static/4f1d7242440ea91e11f9cb617f3556d9/9079b/shot9.png 548w\"],\n            \"sizes\": \"(max-width: 548px) 100vw, 548px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/4f1d7242440ea91e11f9cb617f3556d9/9079b/shot9.png\",\n            \"alt\": \"Example running in the command line\",\n            \"title\": \"Example running in the command line\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Here's the complete application (`}<inlineCode parentName=\"p\">{`Program.cs`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.IO;\nusing System;\nusing System.Collections.Generic;\nusing log4net.Repository;\nusing log4net.Config;\nusing log4net;\nusing System.Reflection;\nusing Adobe.PDFServicesSDK;\nusing Adobe.PDFServicesSDK.auth;\nusing Adobe.PDFServicesSDK.pdfops;\nusing Adobe.PDFServicesSDK.options.exportpdf;\nusing Adobe.PDFServicesSDK.io;\nusing Adobe.PDFServicesSDK.exception;\n\nnamespace ExportPDFToWord\n{\n    class Program\n    {\n        private static readonly ILog log = LogManager.GetLogger(typeof(Program));\n        static void Main()\n        {\n            // Configure the logging.\n            ConfigureLogging();\n            try\n            {\n\n                String input = \"./Bodea Brochure.pdf\";\n\n                String output = \"./Bodea Brochure.docx\";\n                if(File.Exists(Directory.GetCurrentDirectory() + output))\n                {\n                    File.Delete(Directory.GetCurrentDirectory() + output);\n                }\n\n                Console.Write(\"Exporting \"+ input + \" to \" + output + \"\\\\n\");\n\n                // Initial setup, create credentials instance.\n                Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()\n                    .FromFile(Directory.GetCurrentDirectory() + \"/pdfservices-api-credentials.json\")\n                    .Build();\n\n                // Create an ExecutionContext using credentials and create a new operation instance.\n                ExecutionContext executionContext = ExecutionContext.Create(credentials);\n                ExportPDFOperation exportPdfOperation = ExportPDFOperation.CreateNew(ExportPDFTargetFormat.DOCX);\n\n                // Provide an input FileRef for the operation.\n                FileRef sourceFileRef = FileRef.CreateFromLocalFile(input);\n                exportPdfOperation.SetInput(sourceFileRef);\n                \n\n                // Execute the operation.\n                FileRef result = exportPdfOperation.Execute(executionContext);\n\n                // Save the result to the specified location.\n                result.SaveAs(Directory.GetCurrentDirectory() + output);\n\n                Console.Write(\"All Done\");\n                \n            }\n            catch (ServiceUsageException ex)\n            {\n                log.Error(\"Exception encountered while executing operation\", ex);\n            }\n            catch (ServiceApiException ex)\n            {\n                log.Error(\"Exception encountered while executing operation\", ex);\n            }\n            catch (SDKException ex)\n            {\n                log.Error(\"Exception encountered while executing operation\", ex);\n            }\n            catch (IOException ex)\n            {\n                log.Error(\"Exception encountered while executing operation\", ex);\n            }\n            catch (Exception ex)\n            {\n                log.Error(\"Exception encountered while executing operation\", ex);\n            }\n        }\n\n        static void ConfigureLogging()\n        {\n            ILoggerRepository logRepository = LogManager.GetRepository(Assembly.GetEntryAssembly());\n            XmlConfigurator.Configure(logRepository, new FileInfo(\"log4net.config\"));\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h2>\n    <p>{`Now that you've successfully performed your first operation, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/overview/pdf-services-api/\"\n      }}>{`review the documentation`}</a>{` for many other examples and reach out on our `}<a parentName=\"p\" {...{\n        \"href\": \"https://community.adobe.com/t5/document-services-apis/ct-p/ct-Document-Cloud-SDK\"\n      }}>{`forums`}</a>{` with any questions. Also remember the samples you downloaded while creating your credentials also have many demos.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}