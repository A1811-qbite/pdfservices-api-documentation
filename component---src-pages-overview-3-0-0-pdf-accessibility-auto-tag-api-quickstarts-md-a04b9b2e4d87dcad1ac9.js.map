{"version":3,"file":"component---src-pages-overview-3-0-0-pdf-accessibility-auto-tag-api-quickstarts-md-a04b9b2e4d87dcad1ac9.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/overview/3.0.0/pdf-accessibility-auto-tag-api/quickstarts.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstarts\"\n    }}>{`Quickstarts`}</h1>\n    <p>\nPDF Accessibility Auto-Tag API is available as SDKs to help you get up and running quickly. You can then leverage the samples in your own code\n    </p>\n    <h2 {...{\n      \"id\": \"get-early-access\"\n    }}>{`Get Early Access`}</h2>\n    <p>{`The PDF Accessibility Auto-Tag API is currently available as Early Access. To request access, `}<a parentName=\"p\" {...{\n        \"href\": \"https://adobe.com/go/accessibility_early_access_form\"\n      }}>{`Contact Us`}</a>{`. Once you receive confirmation that you’ve been given access, proceed to the next step to `}<a parentName=\"p\" {...{\n        \"href\": \"quickstarts/#get-api-credentials\"\n      }}>{`Get API credentials`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"get-api-credentials\"\n    }}>{`Get API credentials`}</h2>\n    <p>{`Calling the PDF Accessibility Auto-Tag API requires an Adobe-provided credential. To get one, `}<a parentName=\"p\" {...{\n        \"href\": \"https://acrobatservices.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-accessibility-auto-tag-api\"\n      }}>{`click here`}</a>{` and complete the workflow. Be sure to copy and save the credential values to a secure location.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`During the credential creation process you'll be asked to whether you'd like a `}<strong parentName=\"p\">{`Personalized Code Sample Download`}</strong>{`. Choosing `}<em parentName=\"p\">{`Personalized`}</em>{` preconfigures the samples with your credential and removes a few steps from your development setup process.`}</p>\n    <h2 {...{\n      \"id\": \"install-sdk-and-samples\"\n    }}>{`Install SDK and samples`}</h2>\n    <p>{`PDF Accessibility Auto-Tag API is available as SDKs in Java and Python.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Please allow-list the following hostnames before using Adobe PDF Services SDK:`}<ul><li>{`ims-na1.adobelogin.com`}</li><li>{`pdf-services.adobe.io (for versions 3.x.x)`}</li><li>{`cpf-ue1.adobe.io (for versions upto 2.x.x)`}</li><li>{`senseicore-ue1.adobe.io (for versions below 1.x.x)`}</li></ul></p>\n    <h3 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h3>\n    <p>{`Jumpstart your development by bookmarking or downloading the following key resources:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`This document`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://opensource.adobe.com/pdfservices-java-sdk-samples/apidocs/beta/\"\n        }}>{`API reference (Javadoc)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/pdfservices-java-sdk-samples/tree/beta\"\n        }}>{`Java sample code`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.adobe.com/go/pdftoolsapi_java_maven\"\n        }}>{`Java library`}</a>{`. The Maven project contains the .jar file.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h4>\n    <p>{`Once you complete the `}<a parentName=\"p\" {...{\n        \"href\": \"quickstarts/#get-api-credentials\"\n      }}>{`Get API credentials`}</a>{`, a zip file automatically downloads that contains content whose structure varies based on whether you opted to download personalized code samples. The zip file structures are as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Personalized Download`}</strong>{`: The samples download zip contains a private.key file and an adobe-dc-pdf-services-sdk-java-samples with a preconfigured pdfservices-api-credentials.json file.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Non Personalized Download`}</strong>{`: The samples download zip contains the private.key file and a pdfservices-api-credentials.json file.`}</li>\n    </ul>\n    <p>{`After downloading the zip, you can either run the samples in the zip directly, or you can replace the pdfservices-api-credentials.json and private.key files in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/pdfservices-java-sdk-samples/tree/beta\"\n      }}>{`Java sample code`}</a>{` with those in the zip.`}</p>\n    <p><strong parentName=\"p\">{`Example pdfservices-api-credentials.json file`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"client_credentials\": {\n   \"client_id\": \"<YOUR_CLIENT_ID>\",\n   \"client_secret\": \"<YOUR_CLIENT_SECRET>\"\n },\n \"service_account_credentials\": {\n   \"organization_id\": \"<YOUR_ORGANIZATION_ID>\",\n   \"account_id\": \"<YOUR_TECHNICAL_ACCOUNT_ID>\",\n   \"private_key_file\": \"<PRIVATE_KEY_FILE_PATH>\"\n }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"install-java-and-maven\"\n    }}>{`Install Java and Maven`}</h4>\n    <p>{`Skip this step if you already have Java and Maven running on your computer.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.oracle.com/java/technologies/downloads/#java8\"\n        }}>{`Java`}</a>{`. The SDK has been tested with Java 8, but it should also work with newer versions.`}</li>\n      <li parentName=\"ol\">{`Verify your installation by running this command `}<inlineCode parentName=\"li\">{`javac -version`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://maven.apache.org/download.cgi\"\n        }}>{`Download`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://maven.apache.org/install.html\"\n        }}>{`install`}</a>{` Maven. The SDK works with maven 3.8.1 or newer versions.`}</li>\n      <li parentName=\"ol\">{`Verify your installation by running this command: `}<inlineCode parentName=\"li\">{`mvn -version`}</inlineCode>{`.`}</li>\n    </ol>\n    <h5 {...{\n      \"id\": \"option-1-personalized-samples-setup\"\n    }}>{`Option 1: Personalized samples setup`}</h5>\n    <p>{`The quickest way to get up and running is to download the personalized code samples during the Get API credentials workflow. These samples provide everything from ready-to-run sample code, an embedded credential json file, and pre-configured connections to dependencies.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Download and extract the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/pdfservices-java-sdk-samples/tree/beta\"\n        }}>{`Java sample project`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Cd to the project directory (which contains pom.xml file) and build the sample project with Maven using this command in terminal: `}<inlineCode parentName=\"li\">{`mvn clean install`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`You can import the samples Maven project into your preferred IDE and run the samples from there or run the below commands from terminal:`}</li>\n    </ol>\n    <h6>{`To generate tagged PDF of version 1.7 from the sample file`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`mvn -f pom.xml exec:java -Dexec.mainClass=com.adobe.pdfservices.operation.samples.autotagpdf.AutotagPDF\n`}</code></pre>\n    <p>{`Note: The above commands run on the input file “autotagPdfInput.pdf” present in “src/main/resources” directory and generate result in “output” directory inside the project. If the output files already exist, the commands will report an error.`}</p>\n    <h5 {...{\n      \"id\": \"option-2-generic-samples-setup\"\n    }}>{`Option 2: Generic samples setup`}</h5>\n    <p>{`If you did not choose `}<strong parentName=\"p\">{`Personalized Code Sample Download`}</strong>{` during the credential setup process:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Download and extract the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/pdfservices-java-sdk-samples/tree/beta\"\n        }}>{`Java sample project`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Copy the downloaded zip to the directory that you set-up for this project and unzip the files there.`}</li>\n      <li parentName=\"ol\">{`In the top-level directory of your samples, find and replace following files with the one present in the downloaded zip file from `}<a parentName=\"li\" {...{\n          \"href\": \"quickstarts/#get-api-credentials\"\n        }}>{`Get API credentials`}</a>{` step:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`pdfservices-api-credentials.json`}</li>\n          <li parentName=\"ol\">{`private.key`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`Cd to the project directory (which contains pom.xml file) and build the sample project with Maven using this command in terminal: `}<inlineCode parentName=\"li\">{`mvn clean install`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`You can import the samples Maven project into your preferred IDE and run the samples from there or run the below commands from terminal:`}</li>\n    </ol>\n    <h6>{`To generate tagged PDF of version 1.7 from the sample file`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`mvn -f pom.xml exec:java -Dexec.mainClass=com.adobe.pdfservices.operation.samples.autotagpdf.AutotagPDF\n`}</code></pre>\n    <p>{`Note: The above commands run on the input file “autotagPdfInput.pdf” present in “src/main/resources” directory and generate result in “output” directory inside the project. If the output files already exist, the commands will report an error.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nOther sample programs in the SDK let you try out API options including generating a tagging report, and shifting headings so that the document title is only H1.\n    <h3 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h3>\n    <p>{`Jumpstart your development by bookmarking or downloading the following key resources:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`This document`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://opensource.adobe.com/pdfservices-python-sdk-samples/apidocs/beta/\"\n        }}>{`Python API reference`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/pdfservices-python-sdk-samples/tree/beta\"\n        }}>{`Python sample code`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.adobe.com/go/pdfservices_python_pypi\"\n        }}>{`Python SDK`}</a></li>\n    </ul>\n    <h4 {...{\n      \"id\": \"authentication-1\"\n    }}>{`Authentication`}</h4>\n    <p>{`Once you complete the `}<a parentName=\"p\" {...{\n        \"href\": \"quickstarts/#get-api-credentials\"\n      }}>{`Get API credentials`}</a>{`, a zip file automatically downloads that contains content whose structure varies based on whether you opted to download personalized code samples. The zip file structures are as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Personalized Download`}</strong>{`: The samples download.zip contains a private.key file and an adobe-dc-pdfservices-sdk-python-samples directory. Each sample directory contains the sample code as well as a preconfigured pdfservices-api-credentials.json file.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Non Personalized Download`}</strong>{`: The samples download zip contains the private.key file and a pdfservices-api-credentials.json file.`}</li>\n    </ul>\n    <p>{`After downloading the zip, you can either run the samples in the zip directly, or you can replace the pdfservices-api-credentials.json and private.key files in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/pdfservices-python-sdk-samples/tree/beta\"\n      }}>{`Python sample code`}</a>{` with those in the zip.`}</p>\n    <p><strong parentName=\"p\">{`Example pdfservices-api-credentials.json file`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"client_credentials\": {\n     \"client_id\": \" <YOUR_CLIENT_ID> \",\n     \"client_secret\": \" <YOUR_CLIENT_SECRET> \"\n  },\n  \"service_account_credentials\": {\n     \"organization_id\": \" <YOUR_ORGANIZATION_ID> \",\n     \"account_id\": \" <YOUR_TECHINCAL_ACCOUNT_ID> \",\n     \"private_key_file\": \"private.key\"\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"install-python\"\n    }}>{`Install Python`}</h4>\n    <p>{`Skip this step if you already have Python running on your computer.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.python.org/downloads/\"\n        }}>{`Python 3.7`}</a>{` or higher.`}</li>\n      <li parentName=\"ol\">{`Verify your installation by running this command: `}<inlineCode parentName=\"li\">{`python --version`}</inlineCode>{`.`}</li>\n    </ol>\n    <h5 {...{\n      \"id\": \"option-1-personalized-samples-setup-1\"\n    }}>{`Option 1: Personalized samples setup`}</h5>\n    <p>{`The quickest way to get up and running is to download the personalized code samples during the Get API credentials workflow. These samples provide everything from ready-to-run sample code, an embedded credential json file, and pre-configured connections to dependencies.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Download and extract the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/pdfservices-python-sdk-samples/tree/beta\"\n        }}>{`Python sample project`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Cd to the project directory (which contains requirements.txt file) and build the sample project using this command in terminal: `}<inlineCode parentName=\"li\">{`pip install -r requirements.txt`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`You can import the samples project into your preferred IDE and run the samples from there or run the below commands from terminal:`}</li>\n    </ol>\n    <h6>{`To generate tagged PDF of version 1.7 from the sample file`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`python src/autotagpdf/autotag_pdf.py\n`}</code></pre>\n    <p>{`Note: The above commands run on the input file “autotagPdfInput.pdf” present in “src/main/resources” directory and generate result in “output” directory inside the project. If the output files already exist, the commands will report an error.`}</p>\n    <h5 {...{\n      \"id\": \"option-2-generic-samples-setup-1\"\n    }}>{`Option 2: Generic samples setup`}</h5>\n    <p>{`If you did not choose `}<strong parentName=\"p\">{`Personalized Code Sample Download`}</strong>{` during the credential setup process:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Download and extract the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/pdfservices-python-sdk-samples/tree/beta\"\n        }}>{`Python sample project`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Copy the downloaded zip to the directory that you set-up for this project and unzip the files there.`}</li>\n      <li parentName=\"ol\">{`In the top-level directory of your samples, find and replace following files with the one present in the downloaded zip file from `}<a parentName=\"li\" {...{\n          \"href\": \"quickstarts/#get-api-credentials\"\n        }}>{`Get API credentials`}</a>{` step:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`pdfservices-api-credentials.json`}</li>\n          <li parentName=\"ol\">{`private.key`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`Cd to the project directory (which contains requirements.txt file) and build the sample project using this command in terminal: `}<inlineCode parentName=\"li\">{`pip install -r requirements.txt`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`You can import the samples into your preferred IDE and run the samples from there or run the below commands from terminal:`}</li>\n    </ol>\n    <h6>{`To generate tagged PDF of version 1.7 from the sample file`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`python src/autotagpdf/autotag_pdf.py\n`}</code></pre>\n    <p>{`Note: The above commands run on the input file “autotagPdfInput.pdf” present in “src/main/resources” directory and generate result in “output” directory inside the project. If the output files already exist, the commands will report an error.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nOther sample programs in the SDK let you try out API options including generating a tagging report, and shifting headings so that the document title is only H1.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}