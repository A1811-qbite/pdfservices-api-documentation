{"version":3,"file":"component---src-pages-overview-pdf-electronic-seal-api-quickstarts-python-index-md-69d8582e3ebad6db0e21.js","mappings":"yTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,uDAAqD,0DAE7DA,EAAAA,EAAAA,KAAA,oRACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,kBAEvBA,EAAAA,EAAAA,KAAA,oDACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KAC9B,KAAQ,qCAAmC,UAC5B,0CACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,kGACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,wEAErBH,EAAAA,EAAAA,KAAA,MACE,GAAM,gCAA8B,kCAEtCA,EAAAA,EAAAA,KAAA,+CAAyCA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACnD,KAAQ,oGAAkG,oGACD,wKAC7GH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,+FAAgG,+FAAgG,gGAC3M,MAAS,kCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,8FAA+F,8FAA+F,+FACzM,MAAS,kCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,yFACP,IAAO,UACP,MAAS,UACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,mIACAA,EAAAA,EAAAA,KAAA,kEACAA,EAAAA,EAAAA,KAAA,kMACAA,EAAAA,EAAAA,KAAA,gHACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,WACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,mGAAoG,mGAAoG,oGAAqG,oGAAqG,qGAC7Z,MAAS,oCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,kGAAmG,kGAAmG,mGAAoG,mGAAoG,oGACzZ,MAAS,oCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,6FACP,IAAO,gBACP,MAAS,gBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,uFACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,WACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,MACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,mGAAoG,mGAAoG,oGAAqG,qGACxT,MAAS,oCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,kGAAmG,kGAAmG,mGAAoG,oGACrT,MAAS,oCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,6FACP,IAAO,cACP,MAAS,cACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,MACE,GAAM,mCAAiC,qCAEzCA,EAAAA,EAAAA,KAAA,0LAAoLA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oCAAkD,WAChQH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,qBACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,mGAAoG,mGAAoG,oGACnN,MAAS,kCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,kGAAmG,kGAAmG,mGACjN,MAAS,kCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,6FACP,IAAO,UACP,MAAS,UACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,yBAAmBA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oCAAkD,2HAC/FH,EAAAA,EAAAA,KAAA,mIAA6HA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,+BAA6C,MACpMH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,WACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,UACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,+FAAgG,+FAAgG,gGAAiG,gGAAiG,gGAAiG,iGAC9e,MAAS,oCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,8FAA+F,8FAA+F,+FAAgG,+FAAgG,+FAAgG,gGACze,MAAS,oCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,yFACP,IAAO,MACP,MAAS,MACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,kKACAA,EAAAA,EAAAA,KAAA,gEAA0DA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAAmC,wBAAwBH,EAAAA,EAAAA,KAAA,KAAGI,KAAK,sBAAsBC,OAAO,UAAQ,QAAa,mMACzML,EAAAA,EAAAA,KAAA,mHAA6GA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,sBAAoC,MAC3KH,EAAAA,EAAAA,KAAA,+CACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,uCAAqC,yCAE7CA,EAAAA,EAAAA,KAAA,oEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,4zCAqBlCH,EAAAA,EAAAA,KAAA,8CAAwCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,0BAAwC,SAASH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,8BAA4C,kEAAkEH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,kBAAgC,SAASH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,sBAAoC,qCAAqCH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oCAAkD,WAC7eH,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,cACzCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,iDAC/CH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,2DAGnDH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,kBACzCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,oDAC/CH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,+DAIrDH,EAAAA,EAAAA,KAAA,kEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,0SASlCH,EAAAA,EAAAA,KAAA,wEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,0fAalCH,EAAAA,EAAAA,KAAA,8DACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,05DA6DlCH,EAAAA,EAAAA,KAAA,6EACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,gXASlCH,EAAAA,EAAAA,KAAA,gFACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,qJAKlCH,EAAAA,EAAAA,KAAA,8CAAwCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,yCAAuD,OACzHH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,s8IA2GlCH,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,0EAAoEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC9E,KAAQ,iFAA+E,4BACtD,kDAAkDH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACjG,KAAQ,yLAAuL,UAChL,uHAGvB,CAEAT,EAAWY,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/overview/pdf-electronic-seal-api/quickstarts/python/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-for-adobe-pdf-electronic-seal-api-python\"\n    }}>{`Quickstart for Adobe PDF Electronic Seal API (Python)`}</h1>\n    <p>{`To get started using Adobe PDF Electronic Seal API, let's walk through a simple scenario - Applying an electronic seal on an invoice PDF document. In this guide, we will walk you through the complete process for creating a program that will accomplish this task.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`To complete this guide, you will need:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.python.org/downloads/\"\n        }}>{`Python`}</a>{` - Python 3.10 or higher is required.`}</li>\n      <li parentName=\"ul\">{`An Adobe ID. If you do not have one, the credential setup will walk you through creating one.`}</li>\n      <li parentName=\"ul\">{`A way to edit code. No specific editor is required for this guide.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-one-getting-credentials\"\n    }}>{`Step One: Getting credentials`}</h2>\n    <p>{`1) To begin, open your browser to `}<a parentName=\"p\" {...{\n        \"href\": \"https://acrobatservices.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-services-api\"\n      }}>{`https://acrobatservices.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-services-api`}</a>{`. If you are not already logged in to Adobe.com, you will need to sign in or create a new user. Using a personal email account is recommend and not a federated ID.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"750px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"74.6875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/5530d/shot1.webp 320w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/0c8fb/shot1.webp 640w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/3ea8a/shot1.webp 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/dd4a7/shot1.png 320w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/0f09e/shot1.png 640w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/e9985/shot1.png 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/e9985/shot1.png\",\n            \"alt\": \"Sign in\",\n            \"title\": \"Sign in\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`2) After registering or logging in, you will then be asked to name your new credentials. Use the name, \"New Project\".`}</p>\n    <p>{`3) Change the \"Choose language\" setting to \"Python\".`}</p>\n    <p>{`4) Also note the checkbox by, \"Create personalized code sample.\" This will include a large set of samples along with your credentials. These can be helpful for learning more later.`}</p>\n    <p>{`5) Click the checkbox saying you agree to the developer terms and then click \"Create credentials.\"`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"54.0625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/5530d/shot2_spc.webp 320w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/0c8fb/shot2_spc.webp 640w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/94b1e/shot2_spc.webp 1280w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/0b34d/shot2_spc.webp 1920w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/0f226/shot2_spc.webp 2450w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/dd4a7/shot2_spc.png 320w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/0f09e/shot2_spc.png 640w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/bbbf7/shot2_spc.png 1280w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/ac7a9/shot2_spc.png 1920w\", \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/35cde/shot2_spc.png 2450w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/df40c2e1b4927580098557dcc29eb61b/bbbf7/shot2_spc.png\",\n            \"alt\": \"Project setup\",\n            \"title\": \"Project setup\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`6) After your credentials are created, they are automatically downloaded:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"50%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/5530d/shot3_spc.webp 320w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/0c8fb/shot3_spc.webp 640w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/94b1e/shot3_spc.webp 1280w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/c5b4b/shot3_spc.webp 1596w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/dd4a7/shot3_spc.png 320w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/0f09e/shot3_spc.png 640w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/bbbf7/shot3_spc.png 1280w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/d866c/shot3_spc.png 1596w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/bbbf7/shot3_spc.png\",\n            \"alt\": \"Credentials\",\n            \"title\": \"Credentials\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"step-two-setting-up-the-project\"\n    }}>{`Step Two: Setting up the project`}</h2>\n    <p>{`1) In your Downloads folder, find the ZIP file with your credentials: PDFServicesSDK-PythonSamples.zip. If you unzip that archive, you will find a folder of samples and the `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` file.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"740px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"64.99999999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/5530d/shot5_spc.webp 320w\", \"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/0c8fb/shot5_spc.webp 640w\", \"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/c30c1/shot5_spc.webp 740w\"],\n            \"sizes\": \"(max-width: 740px) 100vw, 740px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/dd4a7/shot5_spc.png 320w\", \"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/0f09e/shot5_spc.png 640w\", \"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/b38af/shot5_spc.png 740w\"],\n            \"sizes\": \"(max-width: 740px) 100vw, 740px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/c6f5584f126d995bb07a77f5889143b2/b38af/shot5_spc.png\",\n            \"alt\": \"Samples\",\n            \"title\": \"Samples\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`2) Take the `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` file and place it in a new directory. Remember that these credential files are important and should be stored safely.`}</p>\n    <p>{`3) At the command line, change to the directory you created, and run the following command to install the Python SDK: `}<inlineCode parentName=\"p\">{`pip install pdfservices-sdk`}</inlineCode>{`.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"33.125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/5530d/shot7.webp 320w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/0c8fb/shot7.webp 640w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/94b1e/shot7.webp 1280w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/0b34d/shot7.webp 1920w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/d5269/shot7.webp 2560w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/e4c85/shot7.webp 2742w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/dd4a7/shot7.png 320w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/0f09e/shot7.png 640w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/bbbf7/shot7.png 1280w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/ac7a9/shot7.png 1920w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/c7a69/shot7.png 2560w\", \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/9fbb6/shot7.png 2742w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/f9f94b459b0f3416e44a87797ea368f8/bbbf7/shot7.png\",\n            \"alt\": \"alt\",\n            \"title\": \"alt\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`At this point, we've installed the Python SDK for Adobe PDF Services API as a dependency for our project and have copied over our credentials files.`}</p>\n    <p>{`Our application will take an Invoice PDF document, `}<inlineCode parentName=\"p\">{`sampleInvoice.pdf`}</inlineCode>{` (downloadable from `}<a href=\"./sampleInvoice.pdf\" target=\"_blank\">{`here`}</a>{`), and will use the sealing options with default appearance options to apply electronic seal over the PDF document by invoking Acrobat Services API and generate an electronically sealed PDF.`}</p>\n    <p>{`4) In your editor, open the directory where you previously copied the credentials. Create a new file, `}<inlineCode parentName=\"p\">{`electronic-seal.py`}</inlineCode>{`.`}</p>\n    <p>{`Now you're ready to begin coding.`}</p>\n    <h2 {...{\n      \"id\": \"step-three-creating-the-application\"\n    }}>{`Step Three: Creating the application`}</h2>\n    <p>{`1) We'll begin by including our required dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import logging\nimport os\nfrom datetime import datetime\n\nfrom adobe.pdfservices.operation.auth.service_principal_credentials import ServicePrincipalCredentials\nfrom adobe.pdfservices.operation.exception.exceptions import ServiceApiException, ServiceUsageException, SdkException\nfrom adobe.pdfservices.operation.io.cloud_asset import CloudAsset\nfrom adobe.pdfservices.operation.io.stream_asset import StreamAsset\nfrom adobe.pdfservices.operation.pdf_services import PDFServices\nfrom adobe.pdfservices.operation.pdf_services_media_type import PDFServicesMediaType\nfrom adobe.pdfservices.operation.pdfjobs.jobs.eseal_job import PDFElectronicSealJob\nfrom adobe.pdfservices.operation.pdfjobs.params.eseal.csc_auth_context import CSCAuthContext\nfrom adobe.pdfservices.operation.pdfjobs.params.eseal.csc_credentials import CSCCredentials\nfrom adobe.pdfservices.operation.pdfjobs.params.eseal.document_level_permission import DocumentLevelPermission\nfrom adobe.pdfservices.operation.pdfjobs.params.eseal.electronic_seal_params import PDFElectronicSealParams\nfrom adobe.pdfservices.operation.pdfjobs.params.eseal.field_location import FieldLocation\nfrom adobe.pdfservices.operation.pdfjobs.params.eseal.field_options import FieldOptions\nfrom adobe.pdfservices.operation.pdfjobs.result.eseal_pdf_result import ESealPDFResult\n\n`}</code></pre>\n    <p>{`2) Set the environment variables `}<inlineCode parentName=\"p\">{`PDF_SERVICES_CLIENT_ID`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`PDF_SERVICES_CLIENT_SECRET`}</inlineCode>{` by running the following commands and replacing placeholders `}<inlineCode parentName=\"p\">{`YOUR CLIENT ID`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`YOUR CLIENT SECRET`}</inlineCode>{` with the credentials present in `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` file:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Windows:`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`set PDF_SERVICES_CLIENT_ID=<YOUR CLIENT ID>`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`set PDF_SERVICES_CLIENT_SECRET=<YOUR CLIENT SECRET>`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`MacOS/Linux:`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`export PDF_SERVICES_CLIENT_ID=<YOUR CLIENT ID>`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`export PDF_SERVICES_CLIENT_SECRET=<YOUR CLIENT SECRET>`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`3) Next, we can create our credentials and use them:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Initial setup, create credentials instance\ncredentials = ServicePrincipalCredentials(\n    client_id=os.getenv('PDF_SERVICES_CLIENT_ID'),\n    client_secret=os.getenv('PDF_SERVICES_CLIENT_SECRET'))\n\n# Creates a PDF Services instance\npdf_services = PDFServices(credentials=credentials)\n`}</code></pre>\n    <p>{`4) Now, let's create an asset from source file and upload.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`pdf_file = open('./sampleInvoice.pdf', 'rb')\nfile_input_stream = pdf_file.read()\npdf_file.close()\n\nseal_image_file = open('./sampleSealImage.png', 'rb')\nseal_image_input_stream = seal_image_file.read()\nseal_image_file.close()\n\n# Creates an asset(s) from source file(s) and upload\nasset = pdf_services.upload(input_stream=file_input_stream, mime_type=PDFServicesMediaType.PDF)\nseal_image_asset = pdf_services.upload(input_stream=seal_image_input_stream, mime_type=PDFServicesMediaType.PNG)\n`}</code></pre>\n    <p>{`5) Now, let's create the parameters and the job:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Set the document level permission to be applied for output document\ndocument_level_permission = DocumentLevelPermission.FORM_FILLING\n\n# Sets the Seal Field Name to be created in input PDF document.\nseal_field_name = \"Signature1\"\n\n# Sets the page number in input document for applying seal.\nseal_page_number = 1\n\n# Sets if seal should be visible or invisible.\nseal_visible = True\n\n# Creates FieldLocation instance and set the coordinates for applying signature\nfield_location = FieldLocation(150, 250, 350, 200)\n\n# Create FieldOptions instance with required details.\nfield_options = FieldOptions(\n    field_name=seal_field_name,\n    field_location=field_location,\n    page_number=seal_page_number,\n    visible=seal_visible\n)\n\n# Sets the name of TSP Provider being used.\nprovider_name = \"<PROVIDER_NAME>\"\n\n# Sets the access token to be used to access TSP provider hosted APIs.\naccess_token = \"<ACCESS_TOKEN>\"\n\n# Sets the credential ID.\ncredential_id = \"<CREDENTIAL_ID>\"\n\n# Sets the PIN generated while creating credentials.\npin = \"<PIN>\"\n\n# Creates CSCAuthContext instance using access token and token type.\ncsc_auth_context = CSCAuthContext(\n    access_token=access_token,\n    token_type=\"Bearer\",\n)\n\n# Create CertificateCredentials instance with required certificate details.\ncertificate_credentials = CSCCredentials(\n    provider_name=provider_name,\n    credential_id=credential_id,\n    pin=pin,\n    csc_auth_context=csc_auth_context,\n)\n\n# Create parameters for the job\nelectronic_seal_params = PDFElectronicSealParams(\n    seal_certificate_credentials=certificate_credentials,\n    seal_field_options=field_options,\n)\n\n# Creates a new job instance\nelectronic_seal_job = PDFElectronicSealJob(input_asset=asset,\n                                           electronic_seal_params=electronic_seal_params,\n                                           seal_image_asset=seal_image_asset)\n`}</code></pre>\n    <p>{`6) The next code block submits the job and gets the job result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Submit the job and gets the job result\nlocation = pdf_services.submit(electronic_seal_job)\npdf_services_response = pdf_services.get_job_result(location, ESealPDFResult)\n\n# Get content from the resulting asset(s)\nresult_asset: CloudAsset = pdf_services_response.get_result().get_asset()\nstream_asset: StreamAsset = pdf_services.get_content(result_asset)\n`}</code></pre>\n    <p>{`7) The next code block saves the result at the specified location:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`output_file_path = 'output/ElectronicSeal.pdf'\nwith open(output_file_path, \"wb\") as file:\n    file.write(stream_asset.get_input_stream())\n`}</code></pre>\n    <p>{`Here's the complete application (`}<inlineCode parentName=\"p\">{`src/electronicseal/electronic_seal.py`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Initialize the logger\nlogging.basicConfig(level=logging.INFO)\n\nclass ElectronicSeal:\n    def __init__(self):\n        try:\n            pdf_file = open('./sampleInvoice.pdf', 'rb')\n            file_input_stream = pdf_file.read()\n            pdf_file.close()\n\n            seal_image_file = open('./sampleSealImage.png', 'rb')\n            seal_image_input_stream = seal_image_file.read()\n            seal_image_file.close()\n\n            # Initial setup, create credentials instance\n            credentials = ServicePrincipalCredentials(\n                client_id=os.getenv('PDF_SERVICES_CLIENT_ID'),\n                client_secret=os.getenv('PDF_SERVICES_CLIENT_SECRET')\n            )\n\n            # Creates a PDF Services instance\n            pdf_services = PDFServices(credentials=credentials)\n\n            # Creates an asset(s) from source file(s) and upload\n            asset = pdf_services.upload(input_stream=file_input_stream, mime_type=PDFServicesMediaType.PDF)\n            seal_image_asset = pdf_services.upload(input_stream=seal_image_input_stream, mime_type=PDFServicesMediaType.PNG)\n\n            # Set the document level permission to be applied for output document\n            document_level_permission = DocumentLevelPermission.FORM_FILLING\n\n            # Sets the Seal Field Name to be created in input PDF document.\n            seal_field_name = \"Signature1\"\n\n            # Sets the page number in input document for applying seal.\n            seal_page_number = 1\n\n            # Sets if seal should be visible or invisible.\n            seal_visible = True\n\n            # Creates FieldLocation instance and set the coordinates for applying signature\n            field_location = FieldLocation(150, 250, 350, 200)\n\n            # Create FieldOptions instance with required details.\n            field_options = FieldOptions(\n                field_name=seal_field_name,\n                field_location=field_location,\n                page_number=seal_page_number,\n                visible=seal_visible\n            )\n\n            # Sets the name of TSP Provider being used.\n            provider_name = \"<PROVIDER_NAME>\"\n\n            # Sets the access token to be used to access TSP provider hosted APIs.\n            access_token = \"<ACCESS_TOKEN>\"\n\n            # Sets the credential ID.\n            credential_id = \"<CREDENTIAL_ID>\"\n\n            # Sets the PIN generated while creating credentials.\n            pin = \"<PIN>\"\n\n            # Creates CSCAuthContext instance using access token and token type.\n            csc_auth_context = CSCAuthContext(\n                access_token=access_token,\n                token_type=\"Bearer\",\n            )\n\n            # Create CertificateCredentials instance with required certificate details.\n            certificate_credentials = CSCCredentials(\n                provider_name=provider_name,\n                credential_id=credential_id,\n                pin=pin,\n                csc_auth_context=csc_auth_context,\n            )\n\n            # Create parameters for the job\n            electronic_seal_params = PDFElectronicSealParams(\n                seal_certificate_credentials=certificate_credentials,\n                seal_field_options=field_options,\n            )\n\n            # Creates a new job instance\n            electronic_seal_job = PDFElectronicSealJob(input_asset=asset,\n                                                       electronic_seal_params=electronic_seal_params,\n                                                       seal_image_asset=seal_image_asset)\n\n            # Submit the job and gets the job result\n            location = pdf_services.submit(electronic_seal_job)\n            pdf_services_response = pdf_services.get_job_result(location, ESealPDFResult)\n\n            # Get content from the resulting asset(s)\n            result_asset: CloudAsset = pdf_services_response.get_result().get_asset()\n            stream_asset: StreamAsset = pdf_services.get_content(result_asset)\n\n            # Creates an output stream and copy stream asset's content to it\n            output_file_path = 'output/ElectronicSeal.pdf'\n            with open(output_file_path, \"wb\") as file:\n                file.write(stream_asset.get_input_stream())\n\n        except (ServiceApiException, ServiceUsageException, SdkException) as e:\n            logging.exception(f'Exception encountered while executing operation: {e}')\n\nif __name__ == \"__main__\":\n    ElectronicSeal()\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h2>\n    <p>{`Now that you've successfully performed your first operation, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/overview/pdf-services-api/\"\n      }}>{`review the documentation`}</a>{` for many other examples and reach out on our `}<a parentName=\"p\" {...{\n        \"href\": \"https://community.adobe.com/t5/acrobat-services-api/ct-p/ct-Document-Cloud-SDK?page=1&sort=latest_replies&filter=all&lang=all&tabid=discussions&topics=label-accessibilityauto-tagapi\"\n      }}>{`forums`}</a>{` with any questions. Also remember the samples you downloaded while creating your credentials also have many demos.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","href","target","isMDXComponent"],"sourceRoot":""}