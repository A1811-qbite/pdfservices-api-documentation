(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[1512],{66801:function(e,n,t){"use strict";t.r(n),t.d(n,{_frontmatter:function(){return c},default:function(){return u}});var a,o=t(22122),r=t(19756),i=(t(15007),t(64983)),s=t(99536),l=["components"],c={},g=(a="CodeBlock",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),p={_frontmatter:c},d=s.Z;function u(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.mdx)(d,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"delete-pages"},"Delete Pages"),(0,i.mdx)("p",null,"The delete pages operation selectively removes pages from a PDF file."),(0,i.mdx)(g,{slots:"heading, code",repeat:"3",languages:"Java, .NET, NodeJS",mdxType:"CodeBlock"}),(0,i.mdx)("h4",{id:"sample"},"Sample"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},'// Get the samples from https://www.adobe.com/go/pdftoolsapi_java_samples\n// Run the sample:\n// mvn -f pom.xml exec:java -Dexec.mainClass=com.adobe.pdfservices.operation.samples.deletepages.DeletePDFPages\n \n     \n   public class DeletePDFPages {\n\n   // Initialize the logger.\n   private static final Logger LOGGER = LoggerFactory.getLogger(DeletePDFPages.class);\n\n   public static void main(String[] args) {\n       try {\n           // Initial setup, create credentials instance.\n           Credentials credentials = Credentials.serviceAccountCredentialsBuilder()\n                   .fromFile("pdfservices-api-credentials.json")\n                   .build();\n\n           // Create an ExecutionContext using credentials and create a new operation instance.\n           ExecutionContext executionContext = ExecutionContext.create(credentials);\n           DeletePagesOperation deletePagesOperation = DeletePagesOperation.createNew();\n\n           // Set operation input from a source file.\n           FileRef source = FileRef.createFromLocalFile("src/main/resources/deletePagesInput.pdf");\n           deletePagesOperation.setInput(source);\n\n           // Delete pages of the document (as specified by PageRanges).\n           PageRanges pageRangeForDeletion = getPageRangeForDeletion();\n           deletePagesOperation.setPageRanges(pageRangeForDeletion);\n\n           // Execute the operation.\n           FileRef result = deletePagesOperation.execute(executionContext);\n\n           // Save the result to the specified location.\n           result.saveAs("output/deletePagesOutput.pdf");\n\n       } catch (IOException | ServiceApiException | SdkException | ServiceUsageException e) {\n           LOGGER.error("Exception encountered while executing operation", e);\n       }\n   }\n\n   private static PageRanges getPageRangeForDeletion() {\n       // Specify pages for deletion.\n       PageRanges pageRangeForDeletion = new PageRanges();\n       // Add page 1.\n       pageRangeForDeletion.addSinglePage(1);\n\n       // Add pages 3 to 4.\n       pageRangeForDeletion.addRange(3, 4);\n       return pageRangeForDeletion;\n   }\n }\n')),(0,i.mdx)("h4",{id:"sample-1"},"Sample"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},'// Get the samples from https://www.adobe.com/go/pdftoolsapi_net_samples\n// Run the sample:\n// cd DeletePDFPages/\n// dotnet run DeletePDFPages.csproj\n\n    namespace DeletePDFPages\n    {\n      class Program\n      {\n          private static readonly ILog log = LogManager.GetLogger(typeof(Program));\n          static void Main()\n          {\n              // Configure the logging\n              ConfigureLogging();\n              try\n              {\n                  // Initial setup, create credentials instance.\n                  Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()\n                                  .FromFile(Directory.GetCurrentDirectory() + "/pdfservices-api-credentials.json")\n                                  .Build();\n   \n                  // Create an ExecutionContext using credentials.\n                  ExecutionContext executionContext = ExecutionContext.Create(credentials);\n   \n                  // Create a new operation instance\n                  DeletePagesOperation deletePagesOperation = DeletePagesOperation.CreateNew();\n   \n                  // Set operation input from a source file.\n                  FileRef sourceFileRef = FileRef.CreateFromLocalFile(@"deletePagesInput.pdf");\n                  deletePagesOperation.SetInput(sourceFileRef);\n   \n                  // Delete pages of the document (as specified by PageRanges).\n                  PageRanges pageRangeForDeletion = GetPageRangeForDeletion();\n                  deletePagesOperation.SetPageRanges(pageRangeForDeletion);\n   \n                  // Execute the operation.\n                  FileRef result = deletePagesOperation.Execute(executionContext);\n   \n                  // Save the result to the specified location.\n                  result.SaveAs(Directory.GetCurrentDirectory() + "/output/deletePagesOutput.pdf");\n              }\n              catch (ServiceUsageException ex)\n              {\n                  log.Error("Exception encountered while executing operation", ex);\n              }\n              // Catch more errors here . . .\n          }\n   \n          private static PageRanges GetPageRangeForDeletion()\n          {\n              // Specify pages for deletion.\n              PageRanges pageRangeForDeletion = new PageRanges();\n              // Add page 1.\n              pageRangeForDeletion.AddSinglePage(1);\n   \n              // Add pages 3 to 4.\n              pageRangeForDeletion.AddRange(3, 4);\n              return pageRangeForDeletion;\n          }\n   \n          static void ConfigureLogging()\n          {\n              ILoggerRepository logRepository = LogManager.GetRepository(Assembly.GetEntryAssembly());\n              XmlConfigurator.Configure(logRepository, new FileInfo("log4net.config"));\n          }\n      }\n    }\n')),(0,i.mdx)("h4",{id:"sample-2"},"Sample"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"// Get the samples from http://www.adobe.com/go/pdftoolsapi_node_sample\n// Run the sample:\n// node src/replacepages/replace-pdf-pages.js\n\n const PDFServicesSdk = require('@adobe/pdfservices-node-sdk');\n\n const getPageRangesForDeletion = () => {\n   // Specify pages for deletion.\n   const pageRangesForDeletion = new PDFServicesSdk.PageRanges();\n   // Add page 1.\n   pageRangesForDeletion.addSinglePage(1);\n\n   // Add pages 3 to 4.\n   pageRangesForDeletion.addPageRange(3, 4);\n   return pageRangesForDeletion;\n };\n\n try {\n   // Initial setup, create credentials instance.\n   const credentials = PDFServicesSdk.Credentials\n       .serviceAccountCredentialsBuilder()\n       .fromFile(\"pdfservices-api-credentials.json\")\n       .build();\n\n   // Create an ExecutionContext using credentials and create a new operation instance.\n   const executionContext = PDFServicesSdk.ExecutionContext.create(credentials),\n       deletePagesOperation = PDFServicesSdk.DeletePages.Operation.createNew();\n\n   // Set operation input from a source file.\n   const input = PDFServicesSdk.FileRef.createFromLocalFile('resources/deletePagesInput.pdf');\n   deletePagesOperation.setInput(input);\n\n   // Delete pages of the document (as specified by PageRanges).\n   const pageRangesForDeletion = getPageRangesForDeletion();\n   deletePagesOperation.setPageRanges(pageRangesForDeletion);\n\n   // Execute the operation and Save the result to the specified location.\n   deletePagesOperation.execute(executionContext)\n       .then(result => result.saveAsFile('output/deletePagesOutput.pdf'))\n       .catch(err => {\n           if (err instanceof PDFServicesSdk.Error.ServiceApiError\n               || err instanceof PDFServicesSdk.Error.ServiceUsageError) {\n               console.log('Exception encountered while executing operation', err);\n           } else {\n               console.log('Exception encountered while executing operation', err);\n           }\n       });\n } catch (err) {\n   console.log('Exception encountered while executing operation', err);\n }\n")),(0,i.mdx)("p",null,"The REST API example can be found ",(0,i.mdx)("a",{parentName:"p",href:"https://documentcloud.adobe.com/document-services/index.html#post-pageManipulation"},"here")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-pdf-services-api-howtos-delete-pages-md-b2e837bce98de74449ce.js.map