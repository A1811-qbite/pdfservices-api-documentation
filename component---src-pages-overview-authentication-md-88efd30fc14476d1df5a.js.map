{"version":3,"file":"component---src-pages-overview-authentication-md-88efd30fc14476d1df5a.js","mappings":"oTAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,kBADR,mBAGA,eACE,GAAM,sBADR,wBAGA,mBAAG,mBAAQC,WAAW,KAAnB,6BAAH,kFAAkJ,cAAGA,WAAW,IAC5J,KAAQ,qGADsI,cAAlJ,sGAGA,mBAAG,mBAAQA,WAAW,KAAnB,kBAAH,8LAAmP,cAAGA,WAAW,IAC7P,KAAQ,wCADuO,oCAAnP,MAGA,mBAAG,mBAAQA,WAAW,KAAnB,0BAAH,mIACA,mBAAG,mBAAQA,WAAW,KAAnB,+BACH,2BAAY,cAAGA,WAAW,IACtB,KAAQ,wCADA,oCAAZ,2GAGA,0HACA,yGACA,mBAAG,mBAAQA,WAAW,KAAnB,0BAAH,wEAAqI,cAAGA,WAAW,IAC/I,KAAQ,wFADyH,QAArI,MAGA,0BAAW,cAAGA,WAAW,IACrB,KAAQ,qGADD,eAAX,uHAGA,mBAAG,mBAAQA,WAAW,KAAnB,mCAAH,4ZACA,uCAAwB,cAAGA,WAAW,IAClC,KAAQ,mJADY,gCAAxB,+DAKH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/overview/authentication.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <h2 {...{\n      \"id\": \"how-to-get-started\"\n    }}>{`How to get started?`}</h2>\n    <p><strong parentName=\"p\">{`STEP 1: Get Credentials -`}</strong>{` Invoking PDF Services API requires an Adobe-provided credential. To get one, `}<a parentName=\"p\" {...{\n        \"href\": \"https://documentservices.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-services-api\"\n      }}>{`click here`}</a>{`, and complete the workflow. Be sure to copy and save the credential values to a secure location.`}</p>\n    <p><strong parentName=\"p\">{`Validity term:`}</strong>{` The certificate associated with your credential is valid for one year. However, you can simply regenerate a new credential or apply a new certificate to the current credential from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/console/\"\n      }}>{`Document Cloud Developer Console`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`STEP 2: Generate JWT -`}</strong>{` Use the credential created in STEP-1 to generate a signed JSON Web Token (JWT). There are following two ways to generate JWT:`}</p>\n    <p><strong parentName=\"p\">{`• Using Adobe IO Console:`}</strong></p>\n    <p>{`Goto `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/console/\"\n      }}>{`Document Cloud Developer Console`}</a>{` > Select your newly created Integration > Click on \"Service Account (JWT)\" > Goto \"Generate JWT\" tab.`}</p>\n    <p>{`Paste your private.key (from the Credentials zip downloaded in STEP-1) > Click on \"Generate token\".`}</p>\n    <p>{`Save the Generated JWT and Sample cURL command to retrieve access_token in STEP-3.`}</p>\n    <p><strong parentName=\"p\">{`• Using JWT Libraries:`}</strong>{` The steps to generate the JWT using libraries can be referred from `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/authentication/JWT/Scopes/\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/authentication/JWT/samples/#sample-code\"\n      }}>{`sample code`}</a>{` in your preferred programming language to generate JWT. While generating JWT use the metascope as mentioned here.`}</p>\n    <p><strong parentName=\"p\">{`STEP 3: Retrieve Access Token -`}</strong>{` The PDF Services APIs require an access_token to authorize the request. Use the \"Get AccessToken\" API from the Postman Collection with your client_id, client_secret (mentioned in the pdfservices-api-credentials.json file present in the Credentials zip downloaded in STEP-1) and the above generated JWT to get the access_token OR directly use the saved Sample cURL command in STEP-2 to get the access_token.`}</p>\n    <p>{`Follow this link `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/#!AdobeDocs/adobeio-auth/master/JWT/JWT.md#exchanging-jwt-to-retrieve-an-access-token\"\n      }}>{`How to retrieve Access Token`}</a>{`? to understand the request format to get the access_token.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}