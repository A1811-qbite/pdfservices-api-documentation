{"version":3,"file":"component---src-pages-overview-pdf-autotag-api-beta-index-md-2805242229096563d7e0.js","mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,YADR,aAGA,mBACE,mBAAG,mBAAQC,WAAW,KAAnB,sBACH,sUAAuT,cAAGA,WAAW,IACjU,KAAQ,mCAD2S,oBAAvT,+XAGA,uZACA,yYACA,wNACA,6DACA,oBACE,eAAIA,WAAW,MAAf,qLACA,eAAIA,WAAW,MAAf,2EACA,eAAIA,WAAW,MAAf,gXAEF,yhBAMNJ,EAAWK,gBAAiB","sources":["webpack://dev-site-documentation-template/./src/pages/overview/pdf-autotag-api/beta/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <p>\n      <p><strong parentName=\"p\">{`What is Autotag?`}</strong></p>\n      <p>{`The AutotagPDF API makes a PDF much more accessible and should substantially reduce the work required to make a PDF fully accessible. The AutotagPDF API is a powerful tool to improve accessibility in individual PDFs and can be applied at scale for large backlogs of PDFs. The AutotagPDF API (part of the `}<a parentName=\"p\" {...{\n          \"href\": \"../../pdf-services-api/index.md\"\n        }}>{`PDF Services API`}</a>{`) is a web service that uses Adobe’s Sensei AI technology to automatically tag a PDF to improve accessibility of that document. It outputs the tagged pdf, along with an optional report providing detailed information about the added tags. The service replaces any existing tags within your document, so it provides the most benefit for PDFs that have no tags or low-quality tags.`}</p>\n      <p>{`This new service includes significant improvements in tag quality accessible by a REST API that is easily callable by automated workflows. The significant quality improvements include more accurate results for heading levels, reading order, complex lists, links, references, and tables. Screen reader users benefit significantly from the improvements to heading levels for navigation.`}</p>\n      <p>{`Automatic tagging is a good first step on a document’s journey to full accessibility. After auto-tagging, to further improve accessibility, you should add alt-text to all figures and review the tagging of complex tables. Next you should check the first page and how the title is identified, the reading order, and then run the accessibility report, resolving any errors.`}</p>\n      <p>{`The Excel report generated by the autotagPDF service provides information related to the tagging of the document and helps guide you in finding content that you might need to review or correct.`}</p>\n      <p>{`The service has the following options:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`PdfVersion - The service can output PDF in either the PDF 1.7 or PDF 2.0 formats. The default is PDF 1.7 for greatest compatibility with processors and accessibility standards.`}</li>\n        <li parentName=\"ul\">{`GenerateReport - Enable or disable report generation (in XSLX format).`}</li>\n        <li parentName=\"ul\">{`ShiftHeadings - The default tagging identifies a title (if present) and includes it as an additional heading level 1 (H1). If you wish to be more consistent with WCAG HTML accessibility, if a title is identified, then it is marked as an H1, and all remaining headings in the document can be shifted down one level (e.g. H1àH2). This defaults to false (no shift).`}</li>\n      </ul>\n      <p>{`The PDF produced by the Autotag API has its structure identified (Headings, Tables, Lists, Paragraphs, etc), along with language identification for each paragraph for content and to improve word breaks. The output is a tagged PDF, however it is not guaranteed to comply with accessibility standards such as WCAG and PDF/UA, with further downstream remediation required to meet these standards. It is expected that a person will complete the remediation process before certifying a PDF to be compliant with PDF/UA.`}</p>\n    </p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}