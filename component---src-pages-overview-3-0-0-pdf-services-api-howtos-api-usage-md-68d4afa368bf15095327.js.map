{"version":3,"file":"component---src-pages-overview-3-0-0-pdf-services-api-howtos-api-usage-md-68d4afa368bf15095327.js","mappings":"4OAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kBADR,mBAGA,iGACA,eACE,GAAM,oCADR,sCAGA,2HAA4G,cAAGC,WAAW,IACtH,KAAQ,2BADgG,QAA5G,8BAGA,eACE,GAAM,8BADR,gCAGA,+HACA,oBACE,eAAIA,WAAW,MAAf,gFAEF,gEAAiD,cAAGA,WAAW,IAC3D,KAAQ,0GADqC,QAAjD,MAGA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,WAAWJ,QAAQ,eACzE,eACE,GAAM,YADR,aAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,uBADZ,8TAUL,eACE,MAAS,IAET,eAAIA,WAAW,MAAf,eAAmC,uBAAYA,WAAW,MAAvB,OAAnC,iDAAoI,uBAAYA,WAAW,MAAvB,aAApI,2IAAqU,uBAAYA,WAAW,MAAvB,WAArU,oDAEF,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,WAAWJ,QAAQ,eACzE,eACE,GAAM,cADR,aAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,uBADZ,wmBAML,eACE,GAAM,4BADR,8BAGA,yEAA0D,uBAAYA,WAAW,KAAvB,WAA1D,4GAAyN,uBAAYA,WAAW,KAAvB,OAAzN,2BAAmS,uBAAYA,WAAW,KAAvB,YAAnS,sCACA,0GAA2F,cAAGA,WAAW,IACrG,KAAQ,4DAD+E,iBAA3F,MAGA,eACE,GAAM,+BADR,iCAGA,wFAAyE,uBAAYA,WAAW,KAAvB,YAAzE,uEACA,gEAAiD,cAAGA,WAAW,IAC3D,KAAQ,2HADqC,QAAjD,MAGA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,WAAWJ,QAAQ,eACzE,eACE,GAAM,cADR,aAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,uBADZ,uPAML,eACE,GAAM,iCADR,mCAGA,iCAAkB,uBAAYA,WAAW,KAAvB,OAAlB,yDAA0H,uBAAYA,WAAW,KAAvB,UAA1H,oDAAgO,uBAAYA,WAAW,KAAvB,eAAhO,MAA6R,uBAAYA,WAAW,KAAvB,QAA7R,QAAqV,uBAAYA,WAAW,KAAvB,UAArV,MACA,6BAAc,uBAAYA,WAAW,KAAvB,UAAd,cAA8E,uBAAYA,WAAW,KAAvB,eAA9E,+DAAoM,uBAAYA,WAAW,KAAvB,QAApM,QAA4P,uBAAYA,WAAW,KAAvB,UAA5P,MACA,6BAAc,uBAAYA,WAAW,KAAvB,UAAd,cAA8E,uBAAYA,WAAW,KAAvB,QAA9E,uEAAqM,uBAAYA,WAAW,KAAvB,cAArM,mHACA,gEAAiD,cAAGA,WAAW,IAC3D,KAAQ,2FADqC,QAAjD,MAGA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,WAAWJ,QAAQ,eACzE,eACE,GAAM,cADR,aAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,uBADZ,wgBAIL,eACE,GAAM,wDADR,0DAKH,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/overview/3.0.0/pdf-services-api/howtos/api-usage.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-our-apis\"\n    }}>{`Using Our APIs`}</h1>\n    <p>{`This is a step-by-step guide to help you get started with using our APIs. `}</p>\n    <h2 {...{\n      \"id\": \"step-1--getting-the-access-token\"\n    }}>{`Step 1 : Getting the access token`}</h2>\n    <p>{`PDF Services API endpoints are authenticated endpoints. You can get an access token by following the `}<a parentName=\"p\" {...{\n        \"href\": \"../../authentication.md\"\n      }}>{`link`}</a>{` to start using our APIs.`}</p>\n    <h2 {...{\n      \"id\": \"step-2--uploading-an-asset\"\n    }}>{`Step 2 : Uploading an asset`}</h2>\n    <p>{`After getting the access token, we need to upload the asset. Uploading an asset is a two-step process : `}</p>\n    <ol>\n      <li parentName=\"ol\">{`First you need to get an upload pre-signed URI by using the following API.`}</li>\n    </ol>\n    <p>{`You can read more about the API in detail `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/apis/#tag/Assets/operation/asset.uploadpresignedurl\"\n      }}>{`here`}</a>{`.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Rest API\" mdxType=\"CodeBlock\" /> \n    <h3 {...{\n      \"id\": \"rest-api\"\n    }}>{`Rest API`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`curl --location --request POST 'https://pdf-services.adobe.io/assets' \\\\\n--header 'X-API-Key: {{Placeholder for client_id}}' \\\\\n--header 'Authorization: Bearer {{Placeholder for token}}' \\\\\n--header 'Content-Type: application/json' \\\\\n--data-raw '{\n    \"mediaType\": \"{{Placeholder for mediaType}}\"\n}'\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`On getting `}<inlineCode parentName=\"li\">{`200`}</inlineCode>{` response status from the above API, use the `}<inlineCode parentName=\"li\">{`uploadUri`}</inlineCode>{` field in response body of the above API to upload the asset directly to the cloud provider using a PUT API call. You will also get an `}<inlineCode parentName=\"li\">{`assetID`}</inlineCode>{` field which will be used in creating the job.`}</li>\n    </ol>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Rest API\" mdxType=\"CodeBlock\" /> \n    <h3 {...{\n      \"id\": \"rest-api-1\"\n    }}>{`Rest API`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`curl --location -g --request PUT 'https://dcplatformstorageservice-us-east-1.s3-accelerate.amazonaws.com/b37fd583-1ab6-4f49-99ef-d716180b5de4?X-Amz-Security-Token={{Placeholder for X-Amz-Security-Token}}&X-Amz-Algorithm={{Placeholder for X-Amz-Algorithm}}&X-Amz-Date={{Placeholder for X-Amz-Date}}&X-Amz-SignedHeaders={{Placeholder for X-Amz-SignedHeaders}}&X-Amz-Expires={{Placeholder for X-Amz-Expires}}&X-Amz-Credential={{Placeholder for X-Amz-Credential}}&X-Amz-Signature={{Placeholder for X-Amz-Signature}}' \\\\\n--header 'Content-Type: application/pdf' \\\\\n--data-binary '@{{Placeholder for file path}}'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3--creating-the-job\"\n    }}>{`Step 3 : Creating the job`}</h2>\n    <p>{`To create a job for the operation, please use the  `}<inlineCode parentName=\"p\">{`assetID`}</inlineCode>{` obtained in Step 2 in the API request body. On successful job submission you will get a status code of `}<inlineCode parentName=\"p\">{`201`}</inlineCode>{` and a response header `}<inlineCode parentName=\"p\">{`location`}</inlineCode>{` which will be used for polling. `}</p>\n    <p>{`For creating the job, please refer to the corresponding API spec for the particular `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/apis/\"\n      }}>{`PDF Operation`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"step-4--fetching-the-status\"\n    }}>{`Step 4 : Fetching the status`}</h2>\n    <p>{`Once the job is successfully created, you need to poll the at the `}<inlineCode parentName=\"p\">{`location`}</inlineCode>{` returned in response header of Step 3 by using the following API `}</p>\n    <p>{`You can read more about the API in detail `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/apis/#tag/Compress-PDF/operation/pdfoperations.compresspdf.jobstatus\"\n      }}>{`here`}</a>{`.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Rest API\" mdxType=\"CodeBlock\" /> \n    <h3 {...{\n      \"id\": \"rest-api-2\"\n    }}>{`Rest API`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`curl --location -g --request GET 'https://pdf-services.adobe.io/operation/compresspdf/{{Placeholder for job id}}/status' \\\\\n--header 'Authorization: Bearer {{Placeholder for token}}' \\\\\n--header 'x-api-key: {{Placeholder for client id}}'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-5--downloading-the-asset\"\n    }}>{`Step 5 : Downloading the asset`}</h2>\n    <p>{`On getting `}<inlineCode parentName=\"p\">{`200`}</inlineCode>{` response code from the poll API, you will receive a `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` field in the response body which can either be `}<inlineCode parentName=\"p\">{`in progress`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`done`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`failed`}</inlineCode>{`.`}</p>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` field is `}<inlineCode parentName=\"p\">{`in progress`}</inlineCode>{` you need to keep polling the location until it changes to `}<inlineCode parentName=\"p\">{`done`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`failed`}</inlineCode>{`.`}</p>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` field is `}<inlineCode parentName=\"p\">{`done`}</inlineCode>{` the response body will also have a download pre-signed URI in the `}<inlineCode parentName=\"p\">{`dowloadUri`}</inlineCode>{` field, which will be used to download the asset directly from cloud provider by making the following API call`}</p>\n    <p>{`You can read more about the API in detail `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/apis/#tag/Assets/operation/asset.get\"\n      }}>{`here`}</a>{`.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Rest API\" mdxType=\"CodeBlock\" /> \n    <h3 {...{\n      \"id\": \"rest-api-3\"\n    }}>{`Rest API`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`curl --location -g --request GET 'https://dcplatformstorageservice-us-east-1.s3-accelerate.amazonaws.com/b37fd583-1ab6-4f49-99ef-d716180b5de4?X-Amz-Security-Token={{Placeholder for X-Amz-Security-Token}}&X-Amz-Algorithm={{Placeholder for X-Amz-Algorithm}}&X-Amz-Date={{Placeholder for X-Amz-Date}}&X-Amz-SignedHeaders={{Placeholder for X-Amz-SignedHeaders}}&X-Amz-Expires={{Placeholder for X-Amz-Expires}}&X-Amz-Credential={{Placeholder for X-Amz-Credential}}&X-Amz-Signature={{Placeholder for X-Amz-Signature}}'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"there-you-go-your-job-is-completed-in-5-simple-steps\"\n    }}>{`There you go! Your job is completed in 5 simple steps.`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}