"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8726],{29330:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return P}});var r=t(87462),o=t(45987),i=(t(15007),t(64983)),s=t(91515);const a=["components"],p={},c=(d="CodeBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var d;const l={_frontmatter:p},u=s.Z;function P(e){let{components:n}=e,t=(0,o.Z)(e,a);return(0,i.mdx)(u,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"get-pdf-properties"},"Get PDF Properties"),(0,i.mdx)("p",null,"Use this service to get the metadata properties of a PDF. Metadata including page count, PDF version, file size, compliance levels, font info, permissions and more are provided in JSON format for easy processing."),(0,i.mdx)("p",null,"This data can be used to: check if a document is fully text searchable (OCR), understand the e-signature certificate info, find out compliance levels (e.g., PDF/A and PDF/UA), assess file size before compressing, check permissions related to copy, edit, printing, encryption, and much more."),(0,i.mdx)("h2",{id:"rest-api"},"Rest API"),(0,i.mdx)("p",null,"See our public API Reference for ",(0,i.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/document-services/docs/apis/#tag/PDF-Properties"},"PDF Properties"),"."),(0,i.mdx)("h3",{id:"fetch-pdf-properties"},"Fetch PDF Properties"),(0,i.mdx)("p",null,"The sample below fetches the properties of an input PDF."),(0,i.mdx)("p",null,"Please refer the ",(0,i.mdx)("a",{parentName:"p",href:"../api-usage.md"},"API usage guide")," to understand how to use our APIs."),(0,i.mdx)(c,{slots:"heading, code",repeat:"4",languages:"Java, .NET, Node JS, Rest API",mdxType:"CodeBlock"}),(0,i.mdx)("h4",{id:"java"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},'// Get the samples from https://www.adobe.com/go/pdftoolsapi_java_samples\n// Run the sample:\n// mvn -f pom.xml exec:java -Dexec.mainClass=com.adobe.pdfservices.operation.samples.pdfproperties.GetPDFProperties\n\n  public class GetPDFProperties {\n\n    // Initialize the logger.\n    private static final Logger LOGGER = LoggerFactory.getLogger(GetPDFProperties.class);\n\n    public static void main(String[] args) {\n\n      try {\n\n        // Initial setup, create credentials instance.\n        Credentials credentials = Credentials.serviceAccountCredentialsBuilder()\n            .fromFile("pdfservices-api-credentials.json")\n            .build();\n\n        //Create an ExecutionContext using credentials and create a new operation instance.\n        ExecutionContext executionContext = ExecutionContext.create(credentials);\n        PDFPropertiesOperation pdfPropertiesOperation = PDFPropertiesOperation.createNew();\n\n        // Provide an input FileRef for the operation\n        FileRef source = FileRef.createFromLocalFile("src/main/resources/pdfPropertiesInput.pdf");\n        pdfPropertiesOperation.setInputFile(source);\n\n        // Build PDF Properties options to include page level properties and set them into the operation\n        PDFPropertiesOptions pdfPropertiesOptions = PDFPropertiesOptions.PDFPropertiesOptionsBuilder()\n              .includePageLevelProperties(true)\n              .build();\n        pdfPropertiesOperation.setOptions(pdfPropertiesOptions);\n\n        // Execute the operation ang get properties of the PDF in PDFProperties object.\n        PDFProperties result = pdfPropertiesOperation.execute(executionContext);\n            \n        // Get properties of the PDF\n        LOGGER.info("The Page level properties of the PDF: {}", result.getDocument().getPageCount());\n        LOGGER.info("The Fonts used in the PDF: ");\n        for(Font font: result.getDocument().getFonts()) {\n            LOGGER.info(font.getName());\n        }\n\n      } catch (ServiceApiException | IOException | SdkException | ServiceUsageException ex) {\n        LOGGER.error("Exception encountered while executing operation", ex);\n      }\n    }\n  }  \n')),(0,i.mdx)("h4",{id:"net"},".NET"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},'// Get the samples from https://www.adobe.com/go/pdftoolsapi_net_samples\n// Run the sample:\n// cd PDFPropertiesAsJSONObject/\n// dotnet run GetPDFProperties.csproj\n\nnamespace GetPDFProperties\n{\n    class Program\n    {\n        private static readonly ILog log = LogManager.GetLogger(typeof(Program));\n        static void Main()\n    {\n        //Configure the logging\n        ConfigureLogging();\n        try\n        {\n            // Initial setup, create credentials instance.\n            Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()\n            .FromFile(Directory.GetCurrentDirectory() + "/pdfservices-api-credentials.json")\n            .Build();\n\n            //Create an ExecutionContext using credentials and create a new operation instance.\n            ExecutionContext executionContext = ExecutionContext.Create(credentials);\n            PDFPropertiesOperation pdfPropertiesOperation = PDFPropertiesOperation.CreateNew();\n\n            // Provide an input FileRef for the operation\n            FileRef source = FileRef.CreateFromLocalFile(@"pdfPropertiesInput.pdf");\n            pdfPropertiesOperation.SetInput(source);\n\n            // Build PDF Properties options to include page level properties and set them into the operation\n            PDFPropertiesOptions pdfPropertiesOptions = PDFPropertiesOptions.PDFPropertiesOptionsBuilder()\n            .IncludePageLevelProperties(true)\n            .Build();\n            pdfPropertiesOperation.SetOptions(pdfPropertiesOptions);\n\n            // Execute the operation ang get properties of the PDF in PDFProperties object.\n            PDFProperties pdfProperties = pdfPropertiesOperation.Execute(executionContext);\n            Console.WriteLine("The resultant PDF Properties are: " + result.ToString());\n\n        }\n        catch (ServiceUsageException ex)\n        {\n            log.Error("Exception encountered while executing operation", ex);\n        }\n        // Catch more errors here. . .\n    }\n\n        static void ConfigureLogging()\n    {\n        ILoggerRepository logRepository = LogManager.GetRepository(Assembly.GetEntryAssembly());\n        XmlConfigurator.Configure(logRepository, new FileInfo("log4net.config"));\n    }\n    }\n}\n')),(0,i.mdx)("h4",{id:"node-js"},"Node JS"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"// Get the samples from http://www.adobe.com/go/pdftoolsapi_node_sample\n// Run the sample:\n// node src/exportpdf/get-pdf-properties.js\n\nconst PDFServicesSdk = require('@adobe/pdfservices-node-sdk');\n\ntry {\n    // Initial setup, create credentials instance.\n    const credentials =  PDFServicesSdk.Credentials\n        .serviceAccountCredentialsBuilder()\n        .fromFile(\"pdfservices-api-credentials.json\")\n        .build();\n\n    //Create an ExecutionContext using credentials and create a new operation instance.\n    const executionContext = PDFServicesSdk.ExecutionContext.create(credentials),\n        pdfPropertiesOperation = PDFServicesSdk.PDFProperties.Operation.createNew();\n\n    // Set operation input from a source file.\n    const input = PDFServicesSdk.FileRef.createFromLocalFile('resources/pdfPropertiesInput.pdf');\n    pdfPropertiesOperation.setInput(input);\n\n    // Provide any custom configuration options for the operation.\n    const options = new PDFServicesSdk.PDFProperties.options.PDFPropertiesOptions.Builder()\n        .includePageLevelProperties(true)\n        .build();\n    pdfPropertiesOperation.setOptions(options);\n\n    // Execute the operation ang get properties of the PDF in PDFProperties object.\n    pdfPropertiesOperation.execute(executionContext)\n        .then(result => console.log(\"The resultant json object is : \" + JSON.stringify(result, null, 4)))\n        .catch(err => {\n            if(err instanceof PDFServicesSdk.Error.ServiceApiError\n                || err instanceof PDFServicesSdk.Error.ServiceUsageError) {\n                console.log('Exception encountered while executing operation', err);\n            } else {\n                console.log('Exception encountered while executing operation', err);\n            }\n        });\n} catch (err) {\n    console.log('Exception encountered while executing operation', err);\n}\n")),(0,i.mdx)("h4",{id:"rest-api-1"},"Rest API"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"// Please refer our Rest API docs for more information \n// https://developer.adobe.com/document-services/docs/apis/#tag/PDF-Properties\n\ncurl --location --request POST 'https://pdf-services.adobe.io/operation/pdfproperties' \\\n--header 'x-api-key: {{Placeholder for client_id}}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer {{Placeholder for token}}' \\\n--data-raw '{\n    \"assetID\": \"urn:aaid:AS:UE1:23c30ee0-2e4d-46d6-87f2-087832fca718\",\n    \"pageLevel\": false\n}'\n\n// Legacy API can be found here \n// https://documentcloud.adobe.com/document-services/index.html#post-pdfProperties\n")))}P.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-overview-3-0-0-pdf-services-api-howtos-pdf-properties-md-740ab087de0ddba8ba43.js.map