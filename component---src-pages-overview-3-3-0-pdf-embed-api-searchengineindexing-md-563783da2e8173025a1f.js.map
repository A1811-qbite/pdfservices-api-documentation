{"version":3,"file":"component---src-pages-overview-3-3-0-pdf-embed-api-searchengineindexing-md-563783da2e8173025a1f.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,iCAA+B,kCAEvCA,EAAAA,EAAAA,KAAA,SAAG,oZAMDA,EAAAA,EAAAA,KAAA,gNAIFA,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,eAASA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,KAAG,WAAiB,mXAM5CX,EAAAA,EAAAA,KAAA,yMAGAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,OAAK,yEAI3BX,EAAAA,EAAAA,KAAA,mBAAaA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,SAAuB,wBAAwBX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,SAAuB,wEACvGX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,SAAuB,+CAEjFX,EAAAA,EAAAA,KAAA,oHAEAA,EAAAA,EAAAA,KAAA,MACE,GAAM,0BAAwB,2BAEhCA,EAAAA,EAAAA,KAAA,wcAOAA,EAAAA,EAAAA,KAAA,0DACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,+GAEnBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,2GAEnBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,4DACnBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,kGAGrBX,EAAAA,EAAAA,KAAA,4CACFA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACR,KAAQ,gDAA8C,QACzC,YACnBX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,gDAA8D,MACtFX,EAAAA,EAAAA,KAACL,EAAW,CAACiB,MAAM,OAAOF,QAAQ,iBAClCV,EAAAA,EAAAA,KAAA,4KAKJ,CAEAI,EAAWS,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/overview/3.3.0/pdf-embed-api/searchengineindexing.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"handle-search-engine-indexing\"\n    }}>{`Handle search engine indexing`}</h1>\n    <p>PDFs displayed using the PDF Embed API are not indexed and won't appear\nin search engine results by default since the API doesn't store a direct\nreference of the PDF URL in the DOM. In order to index the PDF so that\ntext appears in a search result, the URL of the PDF must be available in\nthe website DOM. Search engine bots start by reading the website content\nand navigate all the links in the DOM.\n      <p>{`Search engine indexing and optimisation of any website can only be\ncontrolled by the website developers. One approach which enables PDF\nindexing via the PDF Embed API involves using sitemaps.`}</p>\n    </p>\n    <h2 {...{\n      \"id\": \"sitemap\"\n    }}>{`Sitemap`}</h2>\n    <p>{`A `}<em parentName=\"p\">{`sitemap`}</em>{` is a file which contains information about the pages and\nother files on the website and the relationships between them. A sitemap\ntells search engines which pages and files are important in the website\nand also provides valuable information about those files. It helps\nsearch engines find the content, crawl the website more efficiently, and\nindex the content.`}</p>\n    <p>{`In order to enable indexing of PDF files displayed using PDF Embed API,\nwebsite developers can add the PDF URL to the sitemap. For example, to\nadd an URL to an XML sitemap of a website:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<url>\n   <loc>https://example.com/PDFs/example.pdf</loc>\n</url>\n`}</code></pre>\n    <p>{`Every `}<inlineCode parentName=\"p\">{`<url>`}</inlineCode>{` tag must contain a `}<inlineCode parentName=\"p\">{`<loc>`}</inlineCode>{` tag which would contain the URL\nof the PDF. You can have multiple `}<inlineCode parentName=\"p\">{`<url>`}</inlineCode>{` tags to add URLs of different\nPDF files.`}</p>\n    <p>{`The search engines will crawl these links found in the sitemap and index\nthe PDF content accordingly.`}</p>\n    <h2 {...{\n      \"id\": \"alternative-approaches\"\n    }}>{`Alternative approaches`}</h2>\n    <p>{`For developers who don't wish to use sitemaps, there are alternative\napproaches to enable search engine PDF indexing. The URL of the PDF file\nshould already be available in the website to enable indexing. Website\ndevelopers can trap the click of the PDF link and open the PDF using PDF\nEmbed API. Developers can create as many user experiences as possible\nwith this approach using the different configurations provided by PDF\nEmbed API.`}</p>\n    <p>{`Here are some of the ways to implement this:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Auto-click on the PDF link after the webpage loads completely and\nopen the PDF in the desired embed mode.`}</li>\n      <li parentName=\"ul\">{`Create a separate webpage to display the PDFs in full window embed\nmode by passing the PDF reference.`}</li>\n      <li parentName=\"ul\">{`Open the PDF in line within the context of the webpage.`}</li>\n      <li parentName=\"ul\">{`Open the PDF on top of the webpage using the lightbox embed mode\nprovided by PDF Embed API.`}</li>\n    </ul>\n    <p>{`Find the working code samples\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.com/go/pdfembedapi_samples\"\n      }}>{`here`}</a>{` under\n`}<inlineCode parentName=\"p\">{`/More Samples/Handle Search Engine Indexing/`}</inlineCode>{`.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`These are only suggestions, and it is up to the website developer how\nthey do the actual implementation depending on the design and\nstructure of the website.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}