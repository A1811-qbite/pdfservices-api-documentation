{"version":3,"file":"component---src-pages-overview-pdf-accessibility-auto-tag-api-index-md-ce37b33eb72b94ca3bd4.js","mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,YADR,aAGA,mBACE,mBAAG,mBAAQC,WAAW,KAAnB,gCACH,0dAIA,oEAAqD,cAAGA,WAAW,IAC/D,KAAQ,2EADyC,iBAArD,MAGA,mBAAG,mBAAQA,WAAW,KAAnB,mDACH,kXAGA,soBAMA,oUAGA,6NAEA,6DACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,kBAApB,yEACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,iBAApB,qWAEF,2VAGJ,cAAGA,WAAW,IACN,KAAQ,qDADhB,QAHI,SAK0B,cAAGA,WAAW,IACpC,KAAQ,kDADc,UAL1B,2FAcNJ,EAAWK,gBAAiB","sources":["webpack://dev-site-documentation-template/./src/pages/overview/pdf-accessibility-auto-tag-api/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <p>\n      <p><strong parentName=\"p\">{`What is PDF Tag structure?`}</strong></p>\n      <p>{`To read a document’s text and present it in a way that makes sense to users using assistive technology, a screen reader\nor other text-to-speech tool requires that the document be structured. Document structure tags in a PDF define the\nreading order and identify headings, paragraphs, sections, tables and other page elements. The tags structure also\nallows for documents to be resized and reflowed for viewing at larger sizes and on mobile devices.`}</p>\n      <p>{`You can learn more about PDF Accessibility in `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.adobe.com/accessibility/pdf/pdf-accessibility-overview.html\"\n        }}>{`this overview`}</a>{`.`}</p>\n      <p><strong parentName=\"p\">{`What is Adobe PDF Accessibility Auto-Tag API?`}</strong></p>\n      <p>{`PDF Accessibility Auto-Tag API is a powerful tool that may be used as part of the process of improving accessibility in\nindividual PDFs and can be applied at scale for large backlogs of PDFs. Part of the Adobe PDF Services API offering, it\nis available as a REST-powered SDK with underlying Sensei AI and is easily called by automated workflows.`}</p>\n      <p>{`Automatic tagging is a good first step on a document’s journey to full accessibility. It outputs the tagged pdf, along\nwith an optional report providing detailed information about the added tags. The service replaces any existing tags\nwithin your document, so it provides the most benefit for PDFs that have no tags or low-quality tags. After\nauto-tagging, to further improve accessibility, you may add alt-text to all figures and review the tagging of complex\ntables. Next you should check the first page and how the title is identified, the reading order, and then run the\naccessibility report, resolving any errors.`}</p>\n      <p>{`Automatic tagging provides significant quality improvements over untagged PDF files including more accurate results for\nheading levels, reading order, complex lists, links, references, and tables. Screen reader users also benefit\nsignificantly from the improvements to heading levels for navigation.`}</p>\n      <p>{`The Excel report generated by the PDF Accessibility Auto-Tag service provides information related to the tagging of the\ndocument and helps you find content that you might need to review or correct.`}</p>\n      <p>{`The service has the following options:`}</p>\n      <ul>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`GenerateReport`}</strong>{` - Create a report about the document and its tags (in XLSX format).`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ShiftHeadings`}</strong>{` - The default tagging identifies a title (if present) and includes it as an additional heading level 1 (H1). If you wish to be more consistent with WCAG HTML accessibility, if a title is identified, then it is marked as an H1, and all remaining headings in the document can be shifted down one level (e.g., H1->H2). This defaults to false (no shift).`}</li>\n      </ul>\n      <p>{`The PDF produced by PDF Accessibility Auto-Tag API has its structure identified (Headings, Tables, Lists, Paragraphs,\netc), along with language identification for each paragraph for content and to improve word breaks. The output is a\ntagged PDF, however it is not guaranteed to comply with accessibility standards such as\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://www.w3.org/WAI/standards-guidelines/wcag/\"\n        }}>{`WCAG`}</a>{` and `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.pdfa.org/resource/iso-14289-pdfua/\"\n        }}>{`PDF/UA`}</a>{`,\nas you may need to perform further downstream remediation to meet those standards.`}</p>\n    </p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}