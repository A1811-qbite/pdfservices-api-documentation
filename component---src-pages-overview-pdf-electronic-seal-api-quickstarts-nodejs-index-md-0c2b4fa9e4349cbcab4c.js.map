{"version":3,"file":"component---src-pages-overview-pdf-electronic-seal-api-quickstarts-nodejs-index-md-0c2b4fa9e4349cbcab4c.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/overview/pdf-electronic-seal-api/quickstarts/nodejs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-for-adobe-pdf-electronic-seal-api-nodejs\"\n    }}>{`Quickstart for Adobe PDF Electronic Seal API (Node.js)`}</h1>\n    <p>{`To get started using Adobe PDF Electronic Seal API, let's walk through a simple scenario - Applying an electronic seal on an invoice PDF document. In this guide, we will walk you through the complete process for creating a program that will accomplish this task.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`To complete this guide, you will need:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org\"\n        }}>{`Node.js`}</a>{` - Node.js version 14.0 or higher is required. `}</li>\n      <li parentName=\"ul\">{`An Adobe ID. If you do not have one, the credential setup will walk you through creating one.`}</li>\n      <li parentName=\"ul\">{`A way to edit code. No specific editor is required for this guide.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-one-getting-credentials\"\n    }}>{`Step One: Getting credentials`}</h2>\n    <p>{`1) To begin, open your browser to `}<a parentName=\"p\" {...{\n        \"href\": \"https://acrobatservices.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-services-api\"\n      }}>{`https://acrobatservices.adobe.com/dc-integration-creation-app-cdn/main.html?api=pdf-services-api`}</a>{`. If you are not already logged in to Adobe.com, you will need to sign in or create a new user. Using a personal email account is recommended and not a federated ID.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"750px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"74.6875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/5530d/shot1.webp 320w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/0c8fb/shot1.webp 640w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/3ea8a/shot1.webp 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/dd4a7/shot1.png 320w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/0f09e/shot1.png 640w\", \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/e9985/shot1.png 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/3b0d32040b6b20e4343cb27657c7b00a/e9985/shot1.png\",\n            \"alt\": \"Sign in\",\n            \"title\": \"Sign in\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`2) After registering or logging in, you will then be asked to name your new credentials. Use the name, \"New Project\". `}</p>\n    <p>{`3) Change the \"Choose language\" setting to \"Node.js\". `}</p>\n    <p>{`4) Also note the checkbox by, \"Create personalized code sample.\" This will include a large set of samples along with your credentials. These can be helpful for learning more later. `}</p>\n    <p>{`5) Click the checkbox saying you agree to the developer terms and then click \"Create credentials.\"`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"70%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/5530d/shot2_spc.webp 320w\", \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/0c8fb/shot2_spc.webp 640w\", \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/94b1e/shot2_spc.webp 1280w\", \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/09047/shot2_spc.webp 1876w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/dd4a7/shot2_spc.png 320w\", \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/0f09e/shot2_spc.png 640w\", \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/bbbf7/shot2_spc.png 1280w\", \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/bd320/shot2_spc.png 1876w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/c15958e3ad6cfe74637c5f9d97626ad1/bbbf7/shot2_spc.png\",\n            \"alt\": \"Project setup\",\n            \"title\": \"Project setup\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`6) After your credentials are created, they are automatically downloaded:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"50%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/5530d/shot3_spc.webp 320w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/0c8fb/shot3_spc.webp 640w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/94b1e/shot3_spc.webp 1280w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/c5b4b/shot3_spc.webp 1596w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/dd4a7/shot3_spc.png 320w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/0f09e/shot3_spc.png 640w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/bbbf7/shot3_spc.png 1280w\", \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/d866c/shot3_spc.png 1596w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/0d88cd5f33a26e9d7e455dae8efcdc67/bbbf7/shot3_spc.png\",\n            \"alt\": \"alt\",\n            \"title\": \"alt\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"step-two-setting-up-the-project\"\n    }}>{`Step Two: Setting up the project`}</h2>\n    <p>{`1) In your Downloads folder, find the ZIP file with your credentials: PDFServicesSDK-Node.jsSamples.zip. If you unzip that archive, you will find a folder of samples and the `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` file.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"399px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"74.37499999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/07ff36411bc9cb0e6a8db11cae1d3224/5530d/shot5_spc.webp 320w\", \"/pdfservices-api-documentation/static/07ff36411bc9cb0e6a8db11cae1d3224/9792e/shot5_spc.webp 399w\"],\n            \"sizes\": \"(max-width: 399px) 100vw, 399px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/07ff36411bc9cb0e6a8db11cae1d3224/dd4a7/shot5_spc.png 320w\", \"/pdfservices-api-documentation/static/07ff36411bc9cb0e6a8db11cae1d3224/f7599/shot5_spc.png 399w\"],\n            \"sizes\": \"(max-width: 399px) 100vw, 399px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/07ff36411bc9cb0e6a8db11cae1d3224/f7599/shot5_spc.png\",\n            \"alt\": \"alt\",\n            \"title\": \"alt\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`2) Take the `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` and place it in a new directory. Remember that these credential files are important and should be stored safely.`}</p>\n    <p>{`3) At the command line, change to the directory you created, and initialize a new Node.js project with `}<inlineCode parentName=\"p\">{`npm init -y`}</inlineCode></p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"700px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"31.5625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/5530d/shot7.webp 320w\", \"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/0c8fb/shot7.webp 640w\", \"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/84c6d/shot7.webp 700w\"],\n            \"sizes\": \"(max-width: 700px) 100vw, 700px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/dd4a7/shot7.png 320w\", \"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/0f09e/shot7.png 640w\", \"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/a27c6/shot7.png 700w\"],\n            \"sizes\": \"(max-width: 700px) 100vw, 700px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/pdfservices-api-documentation/static/b74ea3688c47c1502a9a31b757fab1aa/a27c6/shot7.png\",\n            \"alt\": \"alt\",\n            \"title\": \"alt\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`4) Install the Adobe PDF Services Node.js SDK by typing `}<inlineCode parentName=\"p\">{`npm install --save @adobe/pdfservices-node-sdk`}</inlineCode>{` at the command line.`}</p>\n    <p>{`5) Install a package to help us work with ZIP files. Type `}<inlineCode parentName=\"p\">{`npm install --save adm-zip`}</inlineCode>{`.`}</p>\n    <p>{`At this point, we've installed the Node.js SDK for Adobe PDF Services API as a dependency for our project and have copied over our credentials files. `}</p>\n    <p>{`Our application will take an Invoice PDF document, `}<inlineCode parentName=\"p\">{`sampleInvoice.pdf`}</inlineCode>{` (downloadable from `}<a href=\"/pdfservices-api-documentation/assets/0c26b29566765b2fbaa9f5ecc3eabce4/sampleInvoice.pdf\" target=\"_blank\">{`here`}</a>{`), and will use the sealing options with default appearance options to apply electronic seal over the PDF document by invoking Acrobat Services API and generate an electronically sealed PDF.`}</p>\n    <p>{`6) In your editor, open the directory where you previously copied the credentials. Create a new file, `}<inlineCode parentName=\"p\">{`electronic-seal.js`}</inlineCode>{`.`}</p>\n    <p>{`Now you're ready to begin coding.`}</p>\n    <h2 {...{\n      \"id\": \"step-three-creating-the-application\"\n    }}>{`Step Three: Creating the application`}</h2>\n    <p>{`1) We'll begin by including our required dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const PDFServicesSdk = require('@adobe/pdfservices-node-sdk');\n`}</code></pre>\n    <p>{`This line includes the Adobe PDF Services Node.js SDK`}</p>\n    <p>{`2) Set the environment variables `}<inlineCode parentName=\"p\">{`PDF_SERVICES_CLIENT_ID`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`PDF_SERVICES_CLIENT_SECRET`}</inlineCode>{` by running the following commands and replacing placeholders `}<inlineCode parentName=\"p\">{`YOUR CLIENT ID`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`YOUR CLIENT SECRET`}</inlineCode>{` with the credentials present in `}<inlineCode parentName=\"p\">{`pdfservices-api-credentials.json`}</inlineCode>{` file:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Windows:`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`set PDF_SERVICES_CLIENT_ID=<YOUR CLIENT ID>`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`set PDF_SERVICES_CLIENT_SECRET=<YOUR CLIENT SECRET>`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`MacOS/Linux:`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`export PDF_SERVICES_CLIENT_ID=<YOUR CLIENT ID>`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`export PDF_SERVICES_CLIENT_SECRET=<YOUR CLIENT SECRET>`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`3) Next, we setup the SDK to use our credentials.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`    // Initial setup, create credentials instance.\nconst credentials =  PDFServicesSdk.Credentials\n    .servicePrincipalCredentialsBuilder()\n    .withClientId(process.env.PDF_SERVICES_CLIENT_ID)\n    .withClientSecret(process.env.PDF_SERVICES_CLIENT_SECRET)\n    .build();\n\n// Create an ExecutionContext using credentials\nconst executionContext = PDFServicesSdk.ExecutionContext.create(credentials);\n`}</code></pre>\n    <p>{`This code both points to the credentials downloaded previously and sets up an execution context object that will be used later.`}</p>\n    <p>{`4) Let's define the electronic seal and options object to be used later:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const pdfElectronicSeal = PDFServicesSdk.PDFElectronicSeal,\n    options = pdfElectronicSeal.options;\n\n`}</code></pre>\n    <p>{`5) Now, let's define our input fields:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`//Get the input document to perform the sealing operation\nconst sourceFile = PDFServicesSdk.FileRef.createFromLocalFile('./sampleInvoice.pdf'),\n\n//Get the background seal image for signature , if required.\nsealImageFile = PDFServicesSdk.FileRef.createFromLocalFile('./sampleSealImage.png');\n\n`}</code></pre>\n    <p>{`6) Now, we will define seal field options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`//Create AppearanceOptions and add the required signature appearance items\nappearanceOptions = new options.AppearanceOptions();\nappearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.DATE);\nappearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.SEAL_IMAGE);\nappearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.NAME);\nappearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.LABELS);\nappearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.DISTINGUISHED_NAME);\n\n// Set the Seal Field Name to be created in input PDF document.\nsealFieldName = \"Signature1\";\n\n// Set the page number in input document for applying seal.\nsealPageNumber = 1;\n\n// Set if seal should be visible or invisible.\nsealVisible = true;\n\n//Create FieldLocation instance and set the coordinates for applying signature\nfieldLocation = new options.FieldLocation(150,250,350,200);\n\n//Create FieldOptions instance with required details.\nfieldOptions = new options.FieldOptions.Builder(sealFieldName)\n    .setFieldLocation(fieldLocation)\n    .setPageNumber(sealPageNumber)\n    .setVisible(sealVisible)\n    .build();\n`}</code></pre>\n    <p>{`7) Next, we create a CSC Certificate Credentials instance:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`//Set the name of TSP Provider being used.\nproviderName = \"<PROVIDER_NAME>\";\n\n//Set the access token to be used to access TSP provider hosted APIs.\naccessToken = \"<ACCESS_TOKEN>\";\n\n//Set the credential ID.\ncredentialID = \"<CREDENTIAL_ID>\";\n\n//Set the PIN generated while creating credentials.\npin = \"<PIN>\";\n\n//Create CSCAuthContext instance using access token and token type.\ncscAuthContext = new options.CSCAuthContext(accessToken, \"Bearer\");\n\n//Create CertificateCredentials instance with required certificate details.\ncertificateCredentials = options.CertificateCredentials.cscCredentialBuilder()\n    .withProviderName(providerName)\n    .withCredentialID(credentialID)\n    .withPin(pin)\n    .withCSCAuthContext(cscAuthContext)\n    .build();\n\n`}</code></pre>\n    <p>{`8) Now, let's create the seal options with certificate credentials and field options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`    //Create SealOptions instance with sealing parameters.\nsealOptions = new options.SealOptions.Builder(certificateCredentials, fieldOptions)\n    .withAppearanceOptions(appearanceOptions)\n    .build()\n`}</code></pre>\n    <p>{`9) Now, let's create the operation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`//Create the PDFElectronicSealOperation instance using the SealOptions instance\nconst pdfElectronicSealOperation = pdfElectronicSeal.Operation.createNew(sealOptions);\n\n//Set the input source file for PDFElectronicSealOperation instance\npdfElectronicSealOperation.setInput(sourceFile);\n\n//Set the optional input seal image for PDFElectronicSealOperation instance\npdfElectronicSealOperation.setSealImage(sealImageFile);\n\n`}</code></pre>\n    <p>{`This code creates a seal operation using sealOptions, input source file and input seal image.`}</p>\n    <p>{`10) Let's execute this seal operation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Execute the operation and Save the result to the specified location.\npdfElectronicSealOperation.execute(executionContext)\n    .then(result => result.saveAsFile(\"output/sealedOutput.pdf\"))\n    .catch(err => {\n        if(err instanceof PDFServicesSdk.Error.ServiceApiError\n            || err instanceof PDFServicesSdk.Error.ServiceUsageError) {\n            console.log('Exception encountered while executing operation', err);\n        } else {\n            console.log('Exception encountered while executing operation', err);\n        }\n    });\n`}</code></pre>\n    <p>{`Here's the complete application (`}<inlineCode parentName=\"p\">{`electronic-seal.js`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/*\n * Copyright 2023 Adobe\n * All Rights Reserved.\n *\n * NOTICE: Adobe permits you to use, modify, and distribute this file in\n * accordance with the terms of the Adobe license agreement accompanying\n * it. If you have received this file from a source other than Adobe,\n * then your use, modification, or distribution of it requires the prior\n * written permission of Adobe.\n */\n\nconst PDFServicesSdk = require('@adobe/pdfservices-node-sdk');\n\n/**\n * This sample illustrates how to apply electronic seal over the PDF document using custom appearance options.\n *\n * <p>\n * To know more about PDF Electronic Seal, please see the <<a href=\"https://www.adobe.com/go/dc_eseal_overview_doc\" target=\"_blank\">documentation</a>.\n * <p>\n * Refer to README.md for instructions on how to run the samples.\n */\ntry {\n    // Initial setup, create credentials instance.\n    const credentials =  PDFServicesSdk.Credentials\n        .servicePrincipalCredentialsBuilder()\n        .withClientId(process.env.PDF_SERVICES_CLIENT_ID)\n        .withClientSecret(process.env.PDF_SERVICES_CLIENT_SECRET)\n        .build();\n\n    // Create an ExecutionContext using credentials\n    const executionContext = PDFServicesSdk.ExecutionContext.create(credentials);\n\n    const pdfElectronicSeal = PDFServicesSdk.PDFElectronicSeal,\n        options = pdfElectronicSeal.options;\n\n    //Get the input document to perform the sealing operation\n    const sourceFile = PDFServicesSdk.FileRef.createFromLocalFile('./sampleInvoice.pdf'),\n\n        //Get the background seal image for signature , if required.\n        sealImageFile = PDFServicesSdk.FileRef.createFromLocalFile('./sampleSealImage.png');\n\n    //Create AppearanceOptions and add the required signature appearance items\n    appearanceOptions = new options.AppearanceOptions();\n    appearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.DATE);\n    appearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.SEAL_IMAGE);\n    appearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.NAME);\n    appearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.LABELS);\n    appearanceOptions.addItem(options.AppearanceOptions.AppearanceItem.DISTINGUISHED_NAME);\n\n    // Set the Seal Field Name to be created in input PDF document.\n    sealFieldName = \"Signature1\";\n\n    // Set the page number in input document for applying seal.\n    sealPageNumber = 1;\n\n    // Set if seal should be visible or invisible.\n    sealVisible = true;\n\n    //Create FieldLocation instance and set the coordinates for applying signature\n    fieldLocation = new options.FieldLocation(150,250,350,200);\n\n    //Create FieldOptions instance with required details.\n    fieldOptions = new options.FieldOptions.Builder(sealFieldName)\n        .setFieldLocation(fieldLocation)\n        .setPageNumber(sealPageNumber)\n        .setVisible(sealVisible)\n        .build();\n\n    //Set the name of TSP Provider being used.\n    providerName = \"<PROVIDER_NAME>\";\n\n    //Set the access token to be used to access TSP provider hosted APIs.\n    accessToken = \"<ACCESS_TOKEN>\";\n\n    //Set the credential ID.\n    credentialID = \"<CREDENTIAL_ID>\";\n\n    //Set the PIN generated while creating credentials.\n    pin = \"<PIN>\";\n\n    //Create CSCAuthContext instance using access token and token type.\n    cscAuthContext = new options.CSCAuthContext(accessToken, \"Bearer\");\n\n    //Create CertificateCredentials instance with required certificate details.\n    certificateCredentials = options.CertificateCredentials.cscCredentialBuilder()\n        .withProviderName(providerName)\n        .withCredentialID(credentialID)\n        .withPin(pin)\n        .withCSCAuthContext(cscAuthContext)\n        .build();\n\n    //Create SealOptions instance with sealing parameters.\n    sealOptions = new options.SealOptions.Builder(certificateCredentials, fieldOptions)\n        .withAppearanceOptions(appearanceOptions)\n        .build()\n\n    //Create the PDFElectronicSealOperation instance using the SealOptions instance\n    const pdfElectronicSealOperation = pdfElectronicSeal.Operation.createNew(sealOptions);\n\n    //Set the input source file for PDFElectronicSealOperation instance\n    pdfElectronicSealOperation.setInput(sourceFile);\n\n    //Set the optional input seal image for PDFElectronicSealOperation instance\n    pdfElectronicSealOperation.setSealImage(sealImageFile);\n\n    // Execute the operation and Save the result to the specified location.\n    pdfElectronicSealOperation.execute(executionContext)\n        .then(result => result.saveAsFile(\"output/sealedOutput.pdf\"))\n        .catch(err => {\n            if(err instanceof PDFServicesSdk.Error.ServiceApiError\n                || err instanceof PDFServicesSdk.Error.ServiceUsageError) {\n                console.log('Exception encountered while executing operation', err);\n            } else {\n                console.log('Exception encountered while executing operation', err);\n            }\n        });\n\n} catch (err) {\n    console.log('Exception encountered while executing operation', err);\n}\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h2>\n    <p>{`Now that you've successfully performed your first operation, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/overview/pdf-services-api/\"\n      }}>{`review the documentation`}</a>{` for many other examples and reach out on our `}<a parentName=\"p\" {...{\n        \"href\": \"https://community.adobe.com/t5/document-services-apis/ct-p/ct-Document-Cloud-SDK\"\n      }}>{`forums`}</a>{` with any questions. Also remember the samples you downloaded while creating your credentials also have many demos.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","href","target","isMDXComponent"],"sourceRoot":""}