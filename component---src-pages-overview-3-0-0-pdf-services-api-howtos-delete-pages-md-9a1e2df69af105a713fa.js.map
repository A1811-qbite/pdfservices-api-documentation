{"version":3,"file":"component---src-pages-overview-3-0-0-pdf-services-api-howtos-delete-pages-md-9a1e2df69af105a713fa.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5BM,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAEMI,EAAc,CAClBN,aAAAA,GAEIO,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGT,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,gBAAc,iBAEtBA,EAAAA,EAAAA,KAAA,sDACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,8CAAwCA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAClD,KAAQ,kFAAgF,kBAE5FX,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,0BAE/BA,EAAAA,EAAAA,KAAA,mFACAA,EAAAA,EAAAA,KAAA,8BAAwBA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAClC,KAAQ,mBAAiB,mBACD,wCAC5BX,EAAAA,EAAAA,KAACJ,EAAS,CAACgB,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,gCAAgCJ,QAAQ,eAC9FV,EAAAA,EAAAA,KAAA,MACE,GAAM,QAAM,SAEdA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,uBAAqB,mnEAqDtCX,EAAAA,EAAAA,KAAA,MACE,GAAM,OAAK,SAEbA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,uBAAqB,wxFAqEtCX,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,uBAAqB,miEAoDtCX,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,aAEpBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,uBAAqB,03BA6B1C,CAEAP,EAAWW,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/overview/3.0.0/pdf-services-api/howtos/delete-pages.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/pdfservices-api-documentation/pdfservices-api-documentation/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"delete-pages\"\n    }}>{`Delete Pages`}</h1>\n    <p>{`Delete one or more pages from a document`}</p>\n    <h2 {...{\n      \"id\": \"rest-api\"\n    }}>{`Rest API`}</h2>\n    <p>{`See our public API Reference for `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/document-services/docs/apis/#tag/Page-Manipulation\"\n      }}>{`Delete Pages`}</a></p>\n    <h2 {...{\n      \"id\": \"delete-pages-in-a-pdf\"\n    }}>{`Delete Pages in a PDF`}</h2>\n    <p>{`The delete pages operation selectively removes pages from a PDF file.`}</p>\n    <p>{`Please refer the `}<a parentName=\"p\" {...{\n        \"href\": \"../api-usage.md\"\n      }}>{`API usage guide`}</a>{` to understand how to use our APIs.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"4\" languages=\"Java, .NET, Node JS, Rest API\" mdxType=\"CodeBlock\" /> \n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Get the samples from https://www.adobe.com/go/pdftoolsapi_java_samples\n// Run the sample:\n// mvn -f pom.xml exec:java -Dexec.mainClass=com.adobe.pdfservices.operation.samples.deletepages.DeletePDFPages\n \n     \n   public class DeletePDFPages {\n\n   // Initialize the logger.\n   private static final Logger LOGGER = LoggerFactory.getLogger(DeletePDFPages.class);\n\n   public static void main(String[] args) {\n       try {\n           // Initial setup, create credentials instance.\n           Credentials credentials = Credentials.serviceAccountCredentialsBuilder()\n                   .fromFile(\"pdfservices-api-credentials.json\")\n                   .build();\n\n           // Create an ExecutionContext using credentials and create a new operation instance.\n           ExecutionContext executionContext = ExecutionContext.create(credentials);\n           DeletePagesOperation deletePagesOperation = DeletePagesOperation.createNew();\n\n           // Set operation input from a source file.\n           FileRef source = FileRef.createFromLocalFile(\"src/main/resources/deletePagesInput.pdf\");\n           deletePagesOperation.setInput(source);\n\n           // Delete pages of the document (as specified by PageRanges).\n           PageRanges pageRangeForDeletion = getPageRangeForDeletion();\n           deletePagesOperation.setPageRanges(pageRangeForDeletion);\n\n           // Execute the operation.\n           FileRef result = deletePagesOperation.execute(executionContext);\n\n           // Save the result to the specified location.\n           result.saveAs(\"output/deletePagesOutput.pdf\");\n\n       } catch (IOException | ServiceApiException | SdkException | ServiceUsageException e) {\n           LOGGER.error(\"Exception encountered while executing operation\", e);\n       }\n   }\n\n   private static PageRanges getPageRangeForDeletion() {\n       // Specify pages for deletion.\n       PageRanges pageRangeForDeletion = new PageRanges();\n       // Add page 1.\n       pageRangeForDeletion.addSinglePage(1);\n\n       // Add pages 3 to 4.\n       pageRangeForDeletion.addRange(3, 4);\n       return pageRangeForDeletion;\n   }\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"net\"\n    }}>{`.NET`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Get the samples from https://www.adobe.com/go/pdftoolsapi_net_samples\n// Run the sample:\n// cd DeletePDFPages/\n// dotnet run DeletePDFPages.csproj\n\n    namespace DeletePDFPages\n    {\n      class Program\n      {\n          private static readonly ILog log = LogManager.GetLogger(typeof(Program));\n          static void Main()\n          {\n              // Configure the logging\n              ConfigureLogging();\n              try\n              {\n                  // Initial setup, create credentials instance.\n                  Credentials credentials = Credentials.ServiceAccountCredentialsBuilder()\n                                  .FromFile(Directory.GetCurrentDirectory() + \"/pdfservices-api-credentials.json\")\n                                  .Build();\n   \n                  // Create an ExecutionContext using credentials.\n                  ExecutionContext executionContext = ExecutionContext.Create(credentials);\n   \n                  // Create a new operation instance\n                  DeletePagesOperation deletePagesOperation = DeletePagesOperation.CreateNew();\n   \n                  // Set operation input from a source file.\n                  FileRef sourceFileRef = FileRef.CreateFromLocalFile(@\"deletePagesInput.pdf\");\n                  deletePagesOperation.SetInput(sourceFileRef);\n   \n                  // Delete pages of the document (as specified by PageRanges).\n                  PageRanges pageRangeForDeletion = GetPageRangeForDeletion();\n                  deletePagesOperation.SetPageRanges(pageRangeForDeletion);\n   \n                  // Execute the operation.\n                  FileRef result = deletePagesOperation.Execute(executionContext);\n   \n                  // Save the result to the specified location.\n                  result.SaveAs(Directory.GetCurrentDirectory() + \"/output/deletePagesOutput.pdf\");\n              }\n              catch (ServiceUsageException ex)\n              {\n                  log.Error(\"Exception encountered while executing operation\", ex);\n              }\n              // Catch more errors here . . .\n          }\n   \n          private static PageRanges GetPageRangeForDeletion()\n          {\n              // Specify pages for deletion.\n              PageRanges pageRangeForDeletion = new PageRanges();\n              // Add page 1.\n              pageRangeForDeletion.AddSinglePage(1);\n   \n              // Add pages 3 to 4.\n              pageRangeForDeletion.AddRange(3, 4);\n              return pageRangeForDeletion;\n          }\n   \n          static void ConfigureLogging()\n          {\n              ILoggerRepository logRepository = LogManager.GetRepository(Assembly.GetEntryAssembly());\n              XmlConfigurator.Configure(logRepository, new FileInfo(\"log4net.config\"));\n          }\n      }\n    }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"node-js\"\n    }}>{`Node JS`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Get the samples from http://www.adobe.com/go/pdftoolsapi_node_sample\n// Run the sample:\n// node src/replacepages/replace-pdf-pages.js\n\n const PDFServicesSdk = require('@adobe/pdfservices-node-sdk');\n\n const getPageRangesForDeletion = () => {\n   // Specify pages for deletion.\n   const pageRangesForDeletion = new PDFServicesSdk.PageRanges();\n   // Add page 1.\n   pageRangesForDeletion.addSinglePage(1);\n\n   // Add pages 3 to 4.\n   pageRangesForDeletion.addPageRange(3, 4);\n   return pageRangesForDeletion;\n };\n\n try {\n   // Initial setup, create credentials instance.\n   const credentials = PDFServicesSdk.Credentials\n       .serviceAccountCredentialsBuilder()\n       .fromFile(\"pdfservices-api-credentials.json\")\n       .build();\n\n   // Create an ExecutionContext using credentials and create a new operation instance.\n   const executionContext = PDFServicesSdk.ExecutionContext.create(credentials),\n       deletePagesOperation = PDFServicesSdk.DeletePages.Operation.createNew();\n\n   // Set operation input from a source file.\n   const input = PDFServicesSdk.FileRef.createFromLocalFile('resources/deletePagesInput.pdf');\n   deletePagesOperation.setInput(input);\n\n   // Delete pages of the document (as specified by PageRanges).\n   const pageRangesForDeletion = getPageRangesForDeletion();\n   deletePagesOperation.setPageRanges(pageRangesForDeletion);\n\n   // Execute the operation and Save the result to the specified location.\n   deletePagesOperation.execute(executionContext)\n       .then(result => result.saveAsFile('output/deletePagesOutput.pdf'))\n       .catch(err => {\n           if (err instanceof PDFServicesSdk.Error.ServiceApiError\n               || err instanceof PDFServicesSdk.Error.ServiceUsageError) {\n               console.log('Exception encountered while executing operation', err);\n           } else {\n               console.log('Exception encountered while executing operation', err);\n           }\n       });\n } catch (err) {\n   console.log('Exception encountered while executing operation', err);\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"rest-api-1\"\n    }}>{`Rest API`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Please refer our Rest API docs for more information \n// https://developer.adobe.com/document-services/docs/apis/#tag/Page-Manipulation\n\ncurl --location --request POST 'https://pdf-services.adobe.io/operation/pagemanipulation' \\\\\n--header 'x-api-key: {{Placeholder for client_id}}' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Authorization: Bearer {{Placeholder for token}}' \\\\\n--data-raw '{\n    \"assetID\": \"urn:aaid:AS:UE1:23c30ee0-2e4d-46d6-87f2-087832fca718\",\n    \"pageActions\": [\n        {\n            \"delete\": {\n                \"pageRanges\": [\n                    {\n                        \"start\": 1,\n                        \"end\": 2\n                    }\n                ]\n            }\n        }\n    ]\n}'\n\n// Legacy API can be found here \n// https://documentcloud.adobe.com/document-services/index.html#post-pageManipulation\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}